{"path":"lit/lit_sources/Guan23electMktTradingML2 (2).pdf","text":"Article Data-Driven Electricity Trading Models and Intelligent Solution Using Machine Learning Approaches Jingqi Guan 1*, Shamama Afnan 2%, Jerry Gao %*, Qin Wang % Citation: Jinggi Guan; Shamama Afnan;Jerry Gao; Qin Wang Title. Journal Not Specified 2023,1, 0. https:/ /doi.org/ Received: Revised: Accepted: Published: Copyright: © 2023 by the authors. Submitted to Journal Not Specified for possible open access publication under the terms and conditions of the Creative Commons Attri- bution (CC BY) license (https:// creativecommons.org/licenses/by/ 4.0/). 1 Department of Applied Data Science, San Jose State University, San Jose, CA 95192, USA; jingqgi.guan@sjsu.edu 2 Department of Applied Data Science, San Jose State University, San Jose, CA 95192, USA; shamama.afnan@sjsu.edu Department of Computer Engineering, San Jose State University, San Jose, CA 95192, USA; jerry.gao@sjsu.edu Electric Power Research Institute, 3420 Hillview Ave, Palo Alto, CA 94304, USA; gin.wang@alumni.iastate.edu Correspondence: jerry.gao@sjsu.edu 1 These authors contributed equally to this work.= WwW* Abstract: TODO Keywords: electricity price forecasting 1. Introduction Renewable sources have placed themselves as the preferred energy source while con- sciousness is growing about the environment, climate change and health impacts of fossil fuel. In addition to these, renewable energy is also becoming cheaper to generate and store, blessed by the advent of modern manufacturing methods and scale ups. Renewable energy sources are becoming a financially viable alternative, not just a niche application. Energy Information Administration (EIA, USA) forecasts that from present to 2050, renewable energy will remain the fastest growing source of energy [1]. The Electric grid models are also undergoing changes to address this changed landscape. Many large scale energy farms as well as households are participating in this complex energy delivery mechanism. This has ushered us into the smart grid. Smart grid allows for more data and insights into energy generation/consumption, and has opened the door for application of more statistical tools and forecasts. Energy data are now harvested at more granular levels, and with the proliferation of AI/ML, the gathered data can now be utilized for forecasting more effectively. When it is viewed from the grid-level transmission and distribution perspectives, the available data and computational power allow all stakeholders to re-think the market dynamics. The pricing models in energy markets are also evolving. Instead of a fixed-price or pre-negotiated monthly prices, the market has reshaped to a more-agile and demand-aware mode. A data-aware and well-designed price forecasting model canbring maximum benefit for all the involved bodies in the energy marketplace. A well-articulated and data-driven electricity trading prediction model can be beneficial when the scheduled generation and load vary from the traditionally planned values and the short-term or intraday numbers need to be analyzed and actions need to be executed to maintain balance in the market. [2] Some researchers have pointed out that the energy market needs some overhauling and restructuring to keep pace with changes in trends, generation, and storage as well as the policies. The term ‘electricity market design’ is also being used in this context. [3] A fine-tuned price prediction model can play a valuable role in such market design, restructuring and policy making by addressing many of the shortcomings of the existing market. A well-designed market can play a vital role in expansion of the smart grid by encouraging more user adoptions. The market can operate with oversupply and that can lead to curtailments of generation. Some Independent System Operators (ISO) are pursuing Version August 9, 2023 submitted to Journal Not Specified https:/ /www.mdpi.com/journal /notspecified 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 Version August 9, 2023 submitted to Journal Not Specified 2 of 26 solutions to reduce such curtailing of sources and seeking out ways to maximize usage of their desired renewable sources. [4] There are some existing issues that are hindering the wholesale market from operating at its most efficient point. [5] There are extremes like load shedding events as well as oversupply happen in the real world. This SaaS application aims to push the market to a more efficient state where the involved participants can benefit from the forecast and avoid such extremes. It is also possible to quantify the financial gains achieved by granular price forecasting. [6] For future research, the price prediction can expand to include even more contributors, such as: the price of natural gas, which seems to move the generation cost higher and eventually affect the market price. [7] Extending the reach, it can permeate into self-consumption or car battery optimization to manage the demand side. [8] With traditional grids, market price data is often used in combination with time series modeling. But as smart grid data is more abundant and complex, riddled with white noise, the most accurate model needs to be capable of understanding these complexities. Since the scope of our problem is to forecast prices, its applicability in real life depends heavily on accuracy as well as efficiency. Our goal is to test a variety of models using machine learning technologies in order to find the best suited one, which can be tested using accuracy metrics, as well as computation time. The machine learning algorithm will learn from past data, including market prices, demand and the supply forecast, and major event dataset. The model will consist of state-of-the-art modeling techniques that models the time series forecast very effectively. It will be different from traditional regression models that do not take time series into account. The model will predict the future market prices at several intervals (e.g. five minutes, one hour, one day). Thus, we can leverage more data points in the trading algorithm to identify the optimal strategy. It’s critical to design an effective trading strategy with the consideration of the deep learning algorithm. The trading strategy is responsible for making decisions about whether we should buy or sell. The price difference between buying and selling determines the profit of the overall strategy. If we cannot design a good strategy, we cannot make any profit even with the best market price forecasting model. The interaction between the trading strategy and the price forecasting model is crucial. We need to co-design them in order to reach the optimal potential. Without good features extracted from the raw data, machine learning models will not be able to learn anything. For market price prediction, we need accurate market prices at a fine granularity. Besides market prices, we also need to gather more information about the major factors. For example, we need to collect weather data as well as electricity demand and supply data to train the model more efficiently. The deliverables will be presented in multiple parts. First, we aim to create a dataset consisting of state level and country level electricity market prices at the granularity of hours. It will also consist of datasets related to electricity price prediction, e.g., weather data and power generation data. Second, we will propose a deep learning-based algorithm to forecast the electricity market price given the day ahead information. There are a few innovations for modeling sequential data in the deep learning fields, such as Transformer [9] and LSTM [10]. We plan to evaluate the algorithms as well as proposed innovations based on the experiments. Third, we plan to create a web platform for trading electricity that will be able to leverage our machine learning model to predict the future prices. It will be a good demonstration of our dataset as well as the power of our proposed model. [11] This paper consists of multiple hard technical challenges. For collecting data for state level and country level electricity market prices, we need to leverage data processing libraries to join the data from multiple sources together as well as manage the dataset efficiently in a database. Then, we will employ the State-of-the-Art deep learning models invented in recent years to tackle the complex problem of predicting electricity prices. We have been reading surveys of the deep learning techniques and learning the theories behind those models. Finally, we will exercise our programming capabilities to implement both the front end and the back end of the web application as the application will need to query a remote data source in real time as well as running predictions of our proposed machine 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 5b 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 Version August 9, 2023 submitted to Journal Not Specified 3 of 26 learning model. To evaluate the quality of our paper, we will benchmark our proposed machine learning with a few classical machine learning algorithms that have been explored extensively in the last few years in the academic literature. Ideally, our proposed model will be superior to the classical algorithms. For the web application, we will create a demo that will be fully accessible from a cloud instance. People can enter a web link to visit the demo. This paper proposed a transformer-based algorithm for electricity price forecasting that considers a variety of factors including weather data, electricity demand and supply data, and historical price trends. This paper offered rigorous evaluation of the proposed model against classical machine learning models, providing insights into its effectiveness and efficiency. This paper provided the design and the development of a web-based trading platform that leverages our proposed forecasting model to enable real-time predictions and trading of electricity. This platform will allow users to effectively participate in the electricity market, contributing to the efficiency and dynamism of the smart grid. This paper is organized as follows: Section 2 surveys relevant literature and tech- nology associated with our work, establishing a solid foundation for understanding the methodologies used in our paper. Section 3 provides insight into our data collection and preparation process, elucidating the source, validation, and refinement of data used for training our models. Section 4 delves into the specific design and execution of our proposed model, presenting their respective architectures, training methods, and performance, along with the reasons for their selection. In Section 5, we outline the development and structure of our system, including an overview of our interactive demo platform and its user-friendly interface. Finally, Section 6 concludes the paper, summarizing our findings, our paper’s contributions, and potential directions for future research. 2. Related Work 2.1. Technology and Solution Survey In this section, we will present a survey of existing technology and solutions in the electricity trading industry. There are some existing technologies and solutions that are highlighted in the table below. There are: (1) U.S. Energy Information Administration (EIA): EIA is responsible for collecting, analyzing, and disseminating energy information to promote sound policymaking, efficient markets, and public understanding of energy and its interaction with the economy and the environment. (2) California Independent System Operator (CAISO) [4]: CAISO manages the California’s entire electric power system operations, transmission lines, and electricity market generated and transmitted by its member utilities. (3) Electric Reliability Council of Texas (ERCOT): ERCOT operates Texas's electrical grid, the Texas Interconnection,[3][4] which supplies power to more than 25 million Texas customers and represents 90 percent of the state’s electric load. (4) ANSERGY: ANSERGY offers price prediction and trading. From Table 1, we can find that all of the existing technologies and solutions are already Al powered. It's notable that AI has been a critical part of the unified solution inside the electricity price prediction domain. They all do not disclose the models used in their solution as it’s likely to be a trade secret that they want to keep. For data used, EIA collects national level data, CAISO and ERCOT uses state level data, Ansergy used all the data they are accessible to help with the price prediction. They all provide similar features of demand forecasting and supply forecasting as well as historical data. 89 90 91 92 293 94 95 96 Version August 9, 2023 submitted to Journal Not Specified 4 of 26 Table 1. Technologies and Solutions Survey. Company . Time Supply Price Support Private Name Data Used Features Benefits Frames Prediction Prediction Trading Company Electricity US Energy generation Residential EIA [12] Informa- ! Electricity =~ Long-term Y N N N renewable tion Price energy supply Demand trend data, Inteorated CAISO[4] OASIS, Not stated 5 Long-term Y N N N with map Climate Change economic ~~ -ong-term, ERCOT’s data and Mid-term, ERCOT [13] historical and Long-term Y Y N N historical data Short-term weather forecasting Data Forecasting integration Integration electricity with five ANSERGY [14] OfPuPlic ~~ andgas minutes gp 440, Y Y Y Y accessible priceand granularity data trading and trade execution execution support 2.2. Literature Survey of Existing Research Many researchers devoted their valuable time on the studies on electricity price forecasting as a purpose of demand side load management. We found many literature on price forecasting for the electricity trading. Some of the past research did not deal with real-time data for real-time price prediction for the users to determine whether to switch their load from user to seller. Our most important challenges were selecting the machine learning models to develop, what input data are to feed in the models. To understand model performance, most of the articles compared RMSE, MAE, and MAPE as evaluation metrics for the machine learning models. Table 2 presents the existing literature survey based on machine learning models, real-time, day-ahead, mide-term, long-term pricing and evaluation metrics. Version August 9, 2023 submitted to Journal Not Specified 5 of 26 Table 2. Technologies and Solutions Survey. Machine : Mid-term Long-term A Day Ahead . Real-time Day Ahead . gp Evaluation Pricing Reference Learning Pricin Pricin Pricing Pricing Metric Metric Model 8 8 (Weekly) (Monthly) Result Bi-LSTM, Sharma [15] TCN, SVM, N N N Y MAPE 5.36 LR Carriere [16] SVR, ELM N Y N N RMSE 14.0 RNN, LSTM, Ugurlu [17] GRU N Y N N MAE 5.71 Chinnathambi [18] MLP N Y N N MAPE 2.35 Hybrid Xiao [19] Online ELM Y Y N N RMSE NA ELM, Fuzzy Bhagat [20] interference N Y N N MAPE 0.3952 Polynomial Regression, Y N N N MSE 20.50 Luo [21] SVM, ANN Dehghan [22] MLP N Y N N MAE 1.84 Atef [23] SVM, DL Y N N N ARMSE 311.517 Adaptive regularized Y N N N RMSE 0.1482 Deepa [24] ELM Linear 1 Regression, N N N Y MAPE NA Gabrielli [25] GPR, ANN Zhao [26] Transformer Y Y N N MAPE 0.93 Ozozen [27] Arima-ANN Y N N MAPE 4.08 Huang [28] SVM, DT, N Y MAPE NA NN GRU-TL, Yang [29] DNN Y Y N N MAPE 1.31 Hybrid - Adam N Y N N RMSE, AME, 1.16 Cheng [30] optimized MAPE LSTM As our model deals with time series data, we required to consider the best suited algorithms for the time series data. [31] states that the goal of dynamically pricing electricity is “to make more efficient utilization of generation capacity through load scheduling, optimization and incentivising.” In this article, electricity price forecasting is used as a demand management tool by taking market price as the input data. They used the forecasted price as an input for the load forecasting. Most of the articles used ANN, LSTM, GRU and RNN models as these models can be considered as Time Series Predictive models and Can handle the non-linear complexities. Table 3 presents the comparison of the machine learning models. Version August 9, 2023 submitted to Journal Not Specified 6 of 26 Table 3. Comparison of Machine Learning Methods. Algorithm Purpose Advantage Disadvantage A classic machine learning There are good theory SVR cannot scale to very large foundations for SVR as well as algorithm designed to datasets due to the complexity . the kernel support makes . maximize the decision of the optimization problem. SVM much easier to be SVR [32] boundary gaps between It also does not work well ) applied to a large scale different classes. when there are lots of outliers. dataset. Artificial neural networks are It's senerallv very hard t based on a collection of ANN is a general model > GENETaty very N : train a very complex ANN connected units that are which means we can stack model since the deep NN trained through back multiple NN layers to make ANN ) oo makes back propagation hard propagation to generalize the the model arbitrarily complex. to appl input samples. PP RNN is very hard to train RNN: LSTM [10], GRU [33] RNN is a type of neural network that information from the last node can be passed to the next node which will affect subsequent inputs. RNN can model very complex sequential actions. since each training sample needs to pass the forward pass multiple times. And the dynamic nature of the inputs make the training very unstable. Random Forest An ensemble machine-learning method that can be used for regression by use of multiple decision trees. Efficient with large datasets, little overfitting, works with non-linear data Inefficient training time, biased with categorical data, and low interpretability Transformer [9] The most basic transformer used a large amount of memory in training. The sequential model is weak due to the potential of lost positional information. A transformer is a deep learning model that adopts the techniques of self-attention, differentially weighting the significance of each part of the input data. Sequential modeling is implemented as a matrix multiplication which speeds up training and inference. It allows models to be trained faster. 3. Data Engineering 3.1. Study Area & Data Process Data processing is the most crucial part for the Smart Electricity Price Prediction problem. Searching for reliable data sources for collecting the raw data is very important. Smart Electricity Price Prediction consists of four types of datasets: CA ISO Electricity Market Trading Data, CA ISO System Demand Data, CA ISO Node Location, and CIMIS Weather Data. Each dataset consists of different information, which are enlisted in the table 3.1.1. In this section, we are discussing the process of obtaining raw datasets for the corresponding data requirements. 3.1.1. CAISO Electricity Market Trading Dataset The electricity market price data can be obtained from California ISO [34]. There are several options for selecting intervals for the data collection. The Locational Marginal Prices provide the day ahead market price, FMM Locational Marginal Prices provide the hourly market price in fifteen minute intervals and the Interval Locational Marginal Prices provide the real time market price. The start date, end date and the node can be selected by the user. The data can be downloaded in the csv format. CAISO allows only one month of data to download. For collecting the historical price for a year, this process needs to be repeated twelve times. This dataset consists of the Interval Start Time and End Time in GMT. This time needs to be converted to California local time by subtracting 7 hours. The OPR_DT is in California local time. LMP_TYPE represents the node type and the VALUE column represents the Version August 9, 2023 submitted to Journal Not Specified 7 of 26 electricity price. We will consider only LMP from the LMP_TYPE and LMP_PRC from the 176 XML_DATA_ITEM. 177 Table 4. Data Requirements for collecting datasets . Dataset Source Frequency Duration Format Size Range CAISO Electricity Day Ahead Market [34] Hourly Market CSV 19.5 GB 2020-2022 Trading Price Data CAISO System DAM, Demand [34] Hourly 2DA, 7DA CSV 1.47 GB 2020-2022 Data CAISO 10 nodes in Node [35] NA NA CASO NA the Bay ) Price map Location Area Weather [36] Hourly Actual csv 27MB 2020-2022 3.1.2. CAISO System Demand Data 178 To predict the electricity price, only the market price is not enough. The other useful 17 dataset is system demand and that can be also obtained from CAISO OASIS [34]. There iso are processes for retrieving 2 days ahead or 7 days ahead forecasts by selecting “2DA’ or 1a ‘7DA’ correspondingly. The actual option provides the actual demand, not forecast. The 1s ‘DAM’ option provides day ahead market and ‘RTM’ provides the real-time which actually iss presents a forecast of 5 minutes ahead. The execution type is selected ‘RTD’ and this iss execution provides data for the entire California which is separated by zones “TAC Area ies Name’. The dataset can be downloaded in the csv format. This dataset consists of the ise Interval Start Time and End Time in GMT. This time needs to be converted to California ier local time by subtracting 7 hours. The OPR_DT is in California local time. 188 3.1.3. CAISO Electricity Price Map 189 The Market Price data is obtained in the node level whereas the Demand data is 100 obtained for the entire system. Therefore, to obtain the demand for the particular location 1 we have to observe the node locations in the price map [35]. CAISO Price map displays the ie: electricity price for each node. From the price map we can identify the location of nodes. 1es To locate these nodes into the system, we need to locate the PG&D systems in the map. We 104 will take the average price of the nodes to establish a link between the nodes and the system 10s demand. The electricity price and weather are similar to the nearby nodes. Therefore, 196 we can select some typical representative nodes in a particular system location. From the ier CAISO Price map, the price for all the individual nodes can be obtained by clicking the ies node in the map. When a node is clicked by the user, the market price pops up for that 1s particular node. 200 Version August 9, 2023 submitted to Journal Not Specified 8 of 26 Price Map as or 09:30 () About price map | Day-Ahead Fifteen-Minute Real-Time 07/11/2023 Hour: 9-10 EE EEL LEE EL RE CEI LR Sy Ry TY SR RE $32.38 Marginal Energy Cost2 2 ¢ ? 3 fo. , PUAN BE dd [of ) ® / $100 I 4 4 [Se $50 $0 -$50 Rh S| I UAUAP AL INDIA Fl fyply a Pome. L Ford gmLMP} -$100 FORT APACHE ol ESERVATION | LongBea NegoS : ff y af pAN CARL@QS .* : ¥, Ee ‘Mody RE N: SanDiego N [J Tijuana aYaYall-~ Figure 1. CAISO Electricity Price Map. 3.1.4. CIMIS Weather Data Weather can be another important factor to predict the electricity price. The electricity price is highly dependent on weather variables such as temperatures, wind speed, precipita- tion, solar radiation, etc. The weather datasets can be downloaded from CIMIS (California Irrigation Management Information System) [36]. From CIMIS, the weather data is avail- able to download in monthly, daily and hourly granularity. The data can be downloaded from CIMIS for a particular location using zip code. The location of the weather stations are provided by the CIMIS Region. This dataset includes hourly precipitation, solar radiation, vap pressure, air temperature, humidity, dew point, wind speed, wind direction, and soil temperature. CIMIS regions can be mapped with the CAISO node locations. 3.2. Data Pre-processing We have demonstrated how the dataset will be processed and collected the above two sections. In this section we will focus on pre-processing the data to make it suitable for machine learning model training. Since there are three major parts of our datasets, namely, (1) realtime market price data, (2) demand forecasting data, and (3) weather data from weather stations. I will go over the data pre-processing one by one detailing the major steps needed for each dataset. For real time market price data, since the returned results contain data type of not only real time market price data, there can also be after market price data, we need to filter the dataset to only include real time market data. There is one critical column that we selected for this purpose, LMP_TYPE. LMP stands for Locational Marginal Prices. We will only keep rows whose LMP_TYPE is LMP. Besides LMP_TYPE, there is a numerical field that represents more meaningful infor- mation in this dataset which is the VALUE column which represents the market price at that specific time. Since it can vary greatly between days, we should normalize it so that it can be more effectively applied in the machine learning model. Version August 9, 2023 submitted to Journal Not Specified 9 of 26 For the demand forecast dataset, similar preprocessing techniques are applied. The demand forecast is done by each Transmission access charge (TAC) area. There is only one TAC area we need to focus on which is the PGE area. After the corresponding areas are chosen, we need to normalize the forecasted MW value in this dataset. We will apply similar normalization as the price data. Lastly, we will go through the preprocessing of the weather dataset. It’s similar to the preprocessing of the demand dataset. First, we need to join the two datasets together. Then, we normalize the floating point numbers in the dataset. 3.3. Data Transformation With the whole dataset preprocessed, we are almost ready to use the dataset for training, except that we need to transform the dataset to match the expected input format of the model which is a tensor based input format since our model is implemented using PyTorch whose input type is mostly torch. Tensor. Before data transformation, we will first describe the end goal we want to achieve. For the model training, we will have three kind of inputs: (1) float number features: this will include price data, demand data, and weather data since they are all real numbers, (2) categorical features: it contains month, weekdays, and hours, since the feature space is not consecutive, we used the concept of embeddings to represent each category, (3) labels: this is the target of the training model that will be producing, for example, we will give the prices after 1 hour, 2 hours, 4 hours, 8 hours, and 12 hours as the prediction target to avoid overfitting and helps with price prediction. In the last step, we have produced a table with each row representing real time market price with joined demand data and weather data. This is far from the actual input required by the machine learning model. We implemented a windowed join using pure Python codes. 3.4. Data Preparation After the dataset was cleaned and transformed, we split the data into training, valida- tion, and testing phases to prepare for the modeling development and testing phases. In this case, we grouped the weather, demand and price data by hour and used the hour as a time unit for time series data. In particular approximately, 80 percent of data will be used for training purposes and the rest 20 percent for the testing phase. Preliminary splitting, we decided to use data from 2020 and 2021 for training, and 2022 for testing. The figure below shows the example code. However, the splitting may vary with the Machine Learning Models, depending on what split is ideal for each. In the model development phase, the training dataset would be used to train the model and the validation dataset would be used to fine-tune the training model. 3.5. Data Statistics The metadata of the data from raw to preprocessed are shown in the figures below. Our raw dataset for hourly price data originally had a total of 1,488,948 rows. along with other statistics. Figure 2(a) shows the data statistics of raw electricity market price data and Figure 2(b) shows the data statistics after filtering for the LMP data and grouping by hour. Figure 2(c) and Figure 2(d) represent the demand data before and after cleaning, respectively. After we cleaned and normalized the demand, price and weather data, we create one data frame as detailed above. Figure 3 shows the name of the columns before variable selection. Version August 9, 2023 submitted to Journal Not Specified 10 of 26EERRERER OPR_HR VALUE 1.488948e+06 1.2501778401 6.9226856+-00 7.000000e+00 1.3000008+01 1.900000e+01 2.5000008+01 1488948.0 1.0 0.0 1.0 1.0 1.0 1.0 1.0 1.4885486406 1.686327e401 4.303759e+01 -7.2487988402 0.000000e+00 1.8151500-01 2.893827e401 1.9996838+03 1.488948e+06 6.500000e+00 3.4520546+00 1.0000008+00 3.750000e+00 6.5000008+00 9.250000e+00 1.2000008+01 GROUP 1.4888480+06 7.5101080+01 4.3327506+1 1.0000000+00 3.500000e+01 7.5000000+01 1.130000e+02 1.5500000+02 count 207752.000000 207792.0 29770200405 297702.000000 287702000000 207752.000000EEEEREEEEEEEEEdgy 1.1135 79e+:07 4697968801 12.501882 8.922704 1.000000 7.000000 13.000000| 1.0 0.0 1.0 10 1.0 1.0 1.4 OFRL_NR OPR_YWTENVAL 1.113779e+07 1.4508488-01 1.2406238401 8.9227110400 ~2.7391708-17 1.0000008-+00 -3.1475332+00 -3.463327a-01 1.280207 9-01 2015484001 3.310001e+01 1.1137790407 4 A2237 30400 0.000000e+00 0.O000000a+-00 0.0000008+-00 0.0000000+-00 LOAD_TYPE 1.000000¢--00 6.0000008-+00 1.2000008-+01 1.800000e-+01 2.5000008-+31 C.000000e+00 1.0000002-40 4.0000008-+00 8.000000+00 12000008401 6.500000 3.452053 1.000000 3.750000 6.500000 2.250000 12.000000 rH 1.1137790+07 4.771313a+00 1.45315884+00 4.6000008-+0 5.300000a-+00 5.800000a-+00 5.8000008+00 7.101064 43.304288 5.000000 40.000000 75.000000 115.000000 155.000000 11.500000 8.922108 0.000000 5.750000 11.500000 17250000 1.1937798+07 1.1137700+07 3.08405404+02 2.12075404:03 55223888403 1.3348840+00 0.000000e+00 -8.0290000+02 1.000000e+00 9,6543000-+02 1.0250000+09 2.261 2400+03 1.9240000+03 4.5802208+03 3.0420000+03 E.191410a+04 5.4870008+03 99264.00000 99264.000000 0.75000 0.82915 0.00000 0.00000 0.50000 1.26000 2.00000 12.501682 6.022128 1.000000 7.000000 13.000000 15.000000 25.000000 99264.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 POS 99264.00000 2.30000 1.11804 0.80000 1.55000 2.30000 3.06000 3.80000 | 99264.000000 2410.257830 A16.067848 1512.880000 2113.485000 2393.000000 2670.842500 4702.590000 GROUP 99264.000000 1955.834724 1276.833068 9.000000 808.000000 1824.000000 2781.000000 5416.000000 Figure 2. (a) Raw CAISO Electricity Market Price Data Statistics, (b) Cleaned, Normalized Electricity Market Price Data Statistics, (c) Raw CAISO Electricity Demand Data Statistics, and (d) Raw CAISO Electricity Demand Data Statistics Version August 9, 2023 submitted to Journal Not Specified 11of 26 # Coluan Non-Null Count Dtype # Unnamed: 9 207368 non-null inté4 1 index 207368 non-null Tloated 2 INTERVALSTARTTIME_GMT 207368 non-null object 3 INTERVALEMDTIME_GNT 207368 non-null object 4 OPR_DT 207368 non-null object 5 OPR_HR 207368 non-null floatGd & MHODE_ID_)ML 207368 non-null object 7 NORE_ID 207368 non-null object 8 NODE 207368 non-null abject 9 MARKET _RUN_ID 207368 non-null object 18 LWMP_TYPE 207368 non-null object 11 XML_DATA_ITEM 207368 non-null object 12 PNODE_RESMRID 207368 non-null object 13 GRP_TYPE 207368 non-null abject 14 POS 207368 non-null floated 15 VALUE 207368 non-null Tloatbd 16 OPR_INTERVAL 207368 non-null floattd 17 GROUP 207368 non-null TloatE4 18 HOUR 207368 non-null int64 19 index.1 207368 non-null floatEd 28 2DA 207368 non-null floated 21 TDA 207368 non-null floated 22 ACTUAL 207368 non-null Tloatcd 23 DMM 207368 non-null floattd 24 index.2 207368 non-null floatt4 25 ETe (in) 207368 non-null floatéd 26 Precip {in) 207368 non-null floatGd 27 Rel Hum (%) 2047366 non-null Tloatsd 28 Wind Speed (mph) 207368 non-null floattd 29 Soil Temp (F} 207368 non-null Tloatod Arunaes Flaarrd 172) {arkAf 3% FIT FTEYEE! Figure 3. Merged, Cleaned data before selection. 3.6. Data Analysis After we cleaned and normalized the demand, price and weather data, we created a single dataset as detailed above. We want to learn more about the variables and their relationship Utilizing the prepared data, we observe the correlation between the variables, shown in Figure 4. The correlation heat map showcases a strong correlation between the day-ahead predictions (2DA, 7DA, DAM, ACTUAL). However, we won't use the market data only for prediction, so we are interested to see the correlation between weather variables. From this we see that Relative humidity has the highest correlation (compared to the other weather variables) with the market data. POS — VALUE OPR_INTERVAL GROUP HOUR 2DA TDA ACTUAL DAM ETo (in) Precip (in) Rel Hum (%) wind Speed (mph) Soil Temp (F) - | BH | BH Hn = 8 E a W &POSwind Speed (mphSoil Temp (F Figure 4. Correlation Heatmap. 272 273 274 275 Version August 9, 2023 submitted to Journal Not Specified 12 of 26 S0 ry 20 $ 30 :VALUEpr —\" ioojmmeenewon| em——nes|ammmm———\"cov}ammnemmewmmenre 1234567 8 910111213141516171819202122232425 OPR_HR Figure 5. CAISO electricity price distribution vs the hours of the day. Ll 220°\" 0% 00 pv VP Pn gp ® n™® 2 0 0 on oP oP gn Date Date Figure 6. Trend of electricity price (left) and 7 day ahead forecasting (right) from 2020 to 2022. Version August 9, 2023 submitted to Journal Not Specified 13 of 26 20 0 225% 2 00 on PP gn gp 2? Dabe&F-9Soil Temp (F)[4]nNA WW, 125 00% Pv Pp gp 2 gp Date Figure 7. Trend of soil precipitation (left) and temperature (right) from 2020 to 2022. We also plotted the electricity price distribution against the hours of day, as shown in Figure 5. While the above plots explore the relationships between the variables, we wanted to have an overview of how prices change throughout the day. The plot shows that there are clearly “dead” hours such as between 1-3 am where prices are typically lower. On the other hand, the operating hours starting from 7 am to 10pm show more variability, which makes sense. During these hours there tends to be higher levels of energy usage due to more people being awake. 4. Model Development In the arena of electricity markets, the ability to accurately predict real-time market prices is crucial for decision-making. Our model has been designed with the precise aim of forecasting these prices in the near future. This forecasting is critical, as it provides a strategic advantage by enabling us to buy when the price is increasing or sell when it’s decreasing. In this section, we delve into the details of our proposed model, elucidating the core design and underlying mechanisms that drive its performance. We then advance into the realm of ensemble models. By amalgamating the strengths of our proposed model with those of traditional methods, we devise a robust ensemble model. Subsequently, we execute comprehensive evaluations of these models, examining their relative performances through various lenses. Through these exercises, we aim to glean insights into the capabilities of our designs, facilitating iterative improvements, and ultimately driving towards optimal forecasting accuracy. 4.1. Model Proposal Our model is designed to ingest two types of data sequences - past data and forecast data. The past data includes variables that traditionally influence electricity prices, such as historical electricity prices, supply and demand data, weather parameters (temperature, humidity, and duration of direct sunlight), and significant regional events. We acquire up to seven days of forecast data from the California Independent System Operator (CAISO), including anticipated demand and weather conditions. These diverse and comprehensive datasets equip our model to make accurate forecasts. Upon receipt of the input, our proposed machine learning model processes the data to generate predictions. The output of the model is a forecast of the electricity price after a specified time interval. Based on our literature survey on various data driven short-term electricity price forecasting papers, some of the commonly used machine learning and deep learning models for price forecasting are artificial neural networks (ANN), support vector machines Version August 9, 2023 submitted to Journal Not Specified 14 of 26 (SVM), gradient boosting, and recurrent neural networks (LSTM, GRU). Recurrent neural network models are usually state-of-the-art compared with classic machine learning models. We include these models in the model comparison as the baseline of our proposed model. The Transformer model, equipped with the power of self-attention mechanisms, has been exceptionally successful across various machine learning domains. From natural language processing to time series forecasting, it has consistently outperformed traditional recurrent neural network-based approaches on a multitude of datasets. The self-attention mechanism allows the model to capture dependencies between all elements in the input sequence, irrespective of their distance from each other, enabling it to understand complex patterns and make accurate predictions. However, one observation that stands out in the application of transformer models [37,38] is that they are often directly applied to the underlying dataset without specific customization to fit the problem at hand or the unique traits of the dataset. This generic application could lead to suboptimal results as it fails to consider the specific nuances of individual problems and their corresponding datasets. In this paper, we propose a new transformer-based model with a carefully designed feature modeling architecture that improves the feature representations of numerical fea- tures as well as categorical features and leverages mult-itask learning to improve learning efficiency. 4.1.1. Proposed Model To improve the efficiency of our model, we integrated several innovative techniques. Feature interaction models, such as Deep Cross Networks, were used to enhance feature interactions for both numerical and categorical data. We incorporated multi-task learning to improve model generalization and prevent overfitting. Furthermore, the Transformer model, renowned for its effective handling of sequential data, was integrated into our design. The architecture of our model is designed to accommodate diverse input data. Market prices, weather information, location, event details, date, and time, along with demand- supply forecast data, comprise the input features for the model. These inputs are primarily divided into numerical features, like price and demand, and categorical features, like location and events. The model aims to predict the electricity market prices for the next day at an hourly interval. The innovative aspect of our model lies in its ability to model complex feature in- teractions and multi-task learning capabilities. The Deep Cross Network (DCN) method improves the feature interaction between dense and sparse features. This method uses a mathematical approach to combine different features in each layer, removing the need for manual feature engineering work. In addition, our model makes use of multi-task learning, a strategy that has proven to enhance model generalization and prevent overfitting. This method involves training tasks in parallel while using a shared representation, which is especially useful in deep learning contexts. Another significant element of our proposed model is the incorporation of the trans- former model. This model, well-regarded for handling sequential data, plays a vital role in our architecture. After generating embeddings for the input data based on weights in the Deep Cross Network, the data passes through the positional encoding module and then through multiple transformer encoder layers. The output of the transformer model is sent to different tasks, each of which comprises a Multi-Layer perceptron (MLP) to predict the results. Version August 9, 2023 submitted to Journal Not Specified 15 of 26 Task O: Task 23: Task 24: Task 24: 1-hour price oe 24-hour price 24-hour high price 24-hour low price prediction prediction prediction prediction | Transformer Encoder Layers x8 Bh Positional Encoding 3 ! -\" hl XN PE a he Se - -- - hl PL : X 7 days ; X 24 hoursPRY dined hella didlo d did dS dd dd ET J - - Prd ho “- -”- - Ft tec rc cc cccccccesccecccccecccnscr scr esancasneanan=\"\"\" Feature Interactions } Deep ~, Network Price SR Supply Weather Embedding Lookup Demand Location Event Figure 8. Proposed Model Architecture 4.1.2. Model Optimization Transformers’ effectiveness is well-known but the cost of training and inference also increases with the number of layers as the computation density increases dramatically. Initially, we noticed a significant slowdown in the training time for our proposed model compared with the other approaches. After detailed investigations, we found several paths of optimization and successfully brought down the training time and inference time to be on par with the other existing deep learning models. One of the effective optimization strategies we employed is caching. Caching allows the model to store and reuse previously calculated hidden states in the Transformer layers, significantly reducing the amount of computation required during the training process. This approach not only speeds up the training process but also minimizes memory usage, which can be crucial when working with large datasets. In addition to caching, we also applied sampling techniques to improve the model's performance. Given that our initial dataset consisted of electricity price data points sampled at five-minute intervals, the volume of data was extensive. Although this high-resolution data provided us with detailed insights, it also significantly increased the computational requirements for model training. To tackle this, we implemented a sampling strategy that adjusted the granularity of our data. We transformed our dataset from a five-minute interval frequency to a one-hour interval frequency. This reduction in data resolution effectively Version August 9, 2023 submitted to Journal Not Specified 16 of 26 reduced our dataset size by a factor of twelve without significant loss of information, given the relatively stable nature of electricity prices within short time frames. As shown in the Table above, with all optimizations considered, we are able to achieve on par performance with the other existing deep learning approaches. Training Losses Original Feature Interaction Multi-Task Leaming Beth 1.7 1.6 1.5 4Loss 1.4 - ~~ CL 1.3 hn Lo T— 1.2 1. 1 T Ll T T | T T ¥ 0 200 400 600 800 1000 1200 1400 Epochs Figure 9. Training losses Table 5. Model Optimizations Model Training Time (s) Speedup Baseline 1203 1 Caching 831 1.48 Sampling 753 1.59 Combined 310 3.88 4.2. Ensemble Methods After proposing and successfully implementing a new transformer-based model architecture, we sought to enhance its performance even further. Our transformer-based model already surpassed all existing models in our initial tests, but we were motivated to explore ensemble methods to potentially yield even better results. Ensemble methods have a well-documented history of boosting the performance of individual models by strategically combining their predictions. They can be particularly useful for improving accuracy and robustness, helping models to generalize better by aggregating the strengths and compensating for the weaknesses of several models. In this section, we extend the application of ensemble methods beyond just our transformer-based model. We aim to integrate these techniques with classic machine learning models and recurrent neural networks as well. Our objective is to examine if these combined efforts could further enhance the performance of our forecasting model. We aspire to create a more robust and accurate model that successfully leverages the strengths of various individual models in the ensemble. When it comes to combining model outputs, a naive approach might be to average all predictions together. However, our experimentation showed that such a straightforward method does not produce satisfactory results. A simple average performed worse than the best individual model in our tests. The fundamental flaw in the averaging method is that it assigns equal importance to every model, regardless of the model's performance. Hence, it can be negatively impacted by the less accurate models, leading to sub-optimal overall performance. 381 382 383 384 Version August 9, 2023 submitted to Journal Not Specified 17 of 26 To address this, we opted for a more sophisticated approach to ensemble learning, specifically using StackingRegressor with Ridge Regression. This methodology assigns learned weights to combine model outputs, providing a more balanced and performance- oriented approach. In this way, the contribution of each model’s output is weighted based on its relevance and accuracy, which significantly improves the ensemble’s overall performance. Linear Regression > GDBT Past Prices Ensemble Model .Demand Forecast . LSTM > (Weighted > Predicted Weather A PriceDate verage) ) > GRU » Proposed Figure 10. We combine multiple models with a ensemble model of weighted average 4.3. Model Evaluation The most common measures in the performance assessment of forecasting methodolo- gies are Mean Absolute Error (MAE), Mean Absolute Percentage Error (MAPE), and Root Mean Square Error (RMSE). The mean absolute percentage error (MAPE) will be calculated to evaluate the fore- casting performance and determine how many historical load and electricity price are used to forecast short-term load. The MAPE usually express accuracy as a percentage, which is defined by the following formula: MApE = 10%Yi — Yi Lr Yi | Mean Absolute Error is the sum of all the absolute errors divided by the total number of observations. 100% > yi — ¥il RMSE is the most commonly used evaluation metrics for numerical predictions. RMSE is the square root of the mean of the all squared errors. A qy.)2 Comparing all the methodologies, although MAPE offers the chance to evaluate the performances of power price estimates from different markets, for prices close to zero, it does not produce findings that can be easily understood. MAE = 411 Version August 9, 2023 submitted to Journal Not Specified 18 of 26 4.4. Model Comparison and Results After rigorous model training and testing, our preliminary results indicate that the proposed Transformer-based model stands out as the best performer among the models we tested. The performance of each model was quantified using a variety of metrics, reflecting both the accuracy and efficiency of the models. We compared the proposed model with other deep learning models, such as Long Short-Term Memory (LSTM) networks, and traditional regression models. The proposed model demonstrated superior ability in handling the complexities and nuances in our dataset, leading to more accurate forecasts. Our findings highlight the power and promise of our models for electricity price forecasting in the context of smart grids. The accuracy and efficiency of these models position them as powerful tools for facilitating more efficient electricity trading and better decision-making in the electricity market. Table 6. Model Evaluation and Performance Model RMSE MAE MAPE Training Time (s) Infernece Time (s) Linear Regression 1.065 1.123 1.157 1.09 0.032 XGBoost 1.048 1.104 1.113 210 1.104 Reinforcement 1.133 1.211 1.330 603 1.211 Learning Ensemble Model 1.065 1.123 0.849 2315 315 GRU 0.135 1.125 0.367 817 77 LSTM 0.117 0.410 0.281 1444 87 Transformer 0.103 0.129 0.162 298 45 Proposed Model 0.057 0.578 0.271 310 53 —— CAISO | | |3.0 I a meena ee 1 ~—— Linear Regression | | 2.5 GDBT . emo SE SE BREE —— = 2.01 L5TM Ee Eh SEER a — GRU EE | 13 —— Transformer 7 SE HE A oo 1.0| —— Proposed Ee SUS 0.5 0.0 -0.5 3 a0 a0 AS ®%®, 80% 80° go of BP PATRI BT JS es nA set Figure 11. Predicted Price One Day Version August 9, 2023 submitted to Journal Not Specified 19 of 26 | — caso —— Linear Regression | | | 10 GDBT . [EE EE -___ ete | A a I — GRU 6| —— Transformer ------- : es - A : oo BN — Proposed | | | | Figure 12. Predicted price One Week 4.4.1. Trading Experiments Building upon our earlier proposition of an electricity price prediction model, we aim to illustrate its potential applicability in electricity price trading systems. For this purpose, we conducted an intriguing simulation using a Tesla PowerWall as our case study. The Tesla PowerWall, a home battery system with a storage capacity of 13.5 kilowatt-hours and the capability to charge or discharge at a rate of 5 kilowatts, served as our energy storage system. The system’s prowess in managing energy consumption and supplementing renewable energy sources adds immense value to its utilization in the electricity trading system. The simulation operated on the heuristic that electricity prices are typically higher during daytime hours and lower at night, which is a commonly observed trend due to peak demand periods. Consequently, the model was designed to purchase electricity during low-demand nighttime hours and sell it back to the grid during the high-demand daytime period, essentially operating as a form of energy arbitrage. Our results indicate a considerable potential for revenue generation. Projections based on this simulation suggest an annual revenue over $2000, assuming the electricity could be sold back to the grid at the standard rate offered by Pacific Gas and Electric (PGE). Nonetheless, our study showcases the potential of utilizing advanced machine learning models in optimizing electricity trading systems and underscores the future possibilities in this domain. Version August 9, 2023 submitted to Journal Not Specified 20 of 26 2500 - 2000 - 1500-Balance 500 0 + oF oF 9d 0 0% 00 ov 0% 02 a0 a SUBUNIT Li IK Date Figure 13. Trading simulations of heuristic based approach and a machine learning based approach 5. System Development 5.1. System Requirements Analysis The potential use cases of this system include common households, universities, schools, and office buildings present in San Jose. The users of this system can be the residents living in the area, faculty, students, administrative staff, employees, and other local workers present in the area. As users, common households can keep a check on the prices during peak hours and use the appliances later. The localities can keep track of the prices on the web browser and their monthly bills and register to care plans accordingly. The universities and corporate office buildings can keep a check on the energy prices using the application to plan for their peak systems or events to save on electricity consumption. We aim to develop a reliable energy price prediction model for various locations in San Jose based on data-driven machine learning models such as LSTM, GRU, XGBoost, and Transformer. The models are trained on the electricity data collected for these nodes and other natural factors, such as weather, for the same region. As part of data analytics, the data is visualized to check its statistics and take care of missing and null values. The models are trained, and various evaluation metrics such as accuracy, error rate, loss, etc. are used to evaluate the best model among the four. Users can use our UI to enter the name of the region for which they want to know the short- or long-term energy price prediction. The system runs the trained model in the backend running on the cloud from the UI and returns the prediction to the UI. We monitor and perform analysis of the system in a consistent manner at timely intervals to keep up the performance of the application. Further the system design is explained in section 5.2. 5.2. System Design In this section, we'll talk about the overall structure of our system from the four points of view below: (1) System architecture and infrastructure: We'll give a brief overview of the overall structure of the system design. (2) System-supporting platforms and cloud environments: We'll concentrate on platform-level integration, and (3) a system data management solution will be covered in the section, including data storage and query infrastructure. (4) User Interface and Data Visualization: We'll focus on the elements of user experience and data visualization. Version August 9, 2023 submitted to Journal Not Specified 21 of 26 Frontend End Users Browser Users Web Application Backend Machine Learning System — 4 { | Proposed Model Classic Ensemble Models Visulaizaion Model Engine Web Application System — FTC t10 04 0 147504 TG fp dE CGT eT IES some wv [] Prediction Price Detall —f — L_ “ Sma - C3 an. ad FL II 8 pF t% tr N —————— —— T= ed rx: 2) Ani WEAI ANN Oe Data System ! | ) CAISO Weather Other Data Data Data Figure 14. System Frontend and Backend Architecture 5.2.1. System Architecture and Infrastructure for analysis and prediction. It is very important that the data be accurate and recent. There are multiple critical components to this design that we plan to outline in this section, as shown in Figure 7. Data is the first and most important part of any pipeline With enough high-quality data, we can then do data analysis and modeling, which will be leveraged to train the most performant model for predicting the near- and mid-term electricity price of a small region. Then, a trading algorithm will use a series of predicted prices to decide whether to buy, hold, or sell the stock. Eventually, the sequence of actions and the gain and loss of such actions will be shown via an interactive UI for visualization purposes. In the data layer, we need to do two things: data crawling and data storage. The major data sources for our training data are CAISO, CIMIS, and Kaggle. CAISO doesn’t provide a user-friendly API to download the data in batches. We need to make a scalable web crawler so that we can get information from their sites. There are over 20,000 nodes, and each node’s real-time price data can be several gigabytes. We also need to come up with a good way to store and find data when it’s needed during training. In the modeling layer, it’s responsible for converting the fetched data into a machine learning model through continuous training. We have an offline processing pipeline that turns the data into a single Pandas DataFrame. The single dataframe contains real-time market price data, electricity demand data, weather data, and event data. It will be saved in a cloud store for sharing with team members as well as used for data that can be loaded from a cloud trainer. As we need to compare the performance of multiple models, we use different machine learning libraries for different types of models. As a baseline, we use Sklearn, which contains a large number of classic machine learning algorithms. And we use PyTorch because it lets us implement the deep learning algorithms we need in many different ways. We incorporates a fully-functioning web-based demo platform, meticulously designed to enhance the user experience and provide real-time electricity price forecasting results. To start with, the platform communicates with the end users through a user-friendly interface, designed with HTML and JavaScript, and accessed via a web browser. This ensures accessibility and ease of interaction for the users. When a user accesses the platform, it triggers a backend process, which is developed using the Django framework. The backend performsa series of actions to provide the user with the requested forecast. Firstly, it fetches relevant data from a comprehensive database. This data forms the input for our predictive Version August 9, 2023 submitted to Journal Not Specified 22 of 26 model. The backend then feeds these inputs into our sophisticated machine learning models, which have been implemented using PyTorch and other powerful frameworks. These models process the inputs and generate live prediction results. Upon generating the results, a dynamic webpage is created to display them. This process utilizes several frontend libraries, including Bootstrap for responsive design, Charts.js for data visualization, and jQuery for simplified HTML document manipulation and event handling. Consequently, users can effortlessly interact with our backend system through this intuitive frontend, allowing them to access and understand the forecasts generated by our models effectively. This entire system showcases our approach to integrating machine learning with web development, providing users with a seamless, informative, and interactive experience. 5.2.2. System Supporting Platforms and Cloud Environment To achieve efficiency and maximize the developer's efficiency, we target to leverage the machine learning platform and frameworks as much as possible and utilize the cloud environment for its access to performant hardware, which reduces the training time and improves reproducibility as well as reliability. As shown in Figure 8, we listed the major components we used in this system. For machine learning frameworks, we selected Sklearn and PyTorch for their popularity among users. We implemented our training and model evaluation inside of the Jupyter notebooks that are shown in Google Colab cloud environment. Inside the Colab notebooks, it accesses Google Cloud to leverage the hardware for its computation power as well as Google Drive to access the aggregated training data. 5.2.3. System Data Management Solution We got a lot of data from CAISO and other sources that needs to be stored, shared, queried well, and kept up to ensure its reliability. We leveraged the data platform support and cloud infrastructure, as mentioned above, and also leveraged open source software for local service environment setups. As shown in Figure 9, we utilized Google Drive for storing and sharing the aggregated training data. As Google Drive is freely accessible and has good integration with Google Colab, it became the best solution for storing this relatively static and huge chunk of data. For model definition and weights, we stored them in Google Drive as well as on our local host’s disk. The model definition is by nature defined on the Colab notebook, but it changes continuously, so we saved some snapshots of the models to make sure the results are reproducible. For the real-time price prediction service as well as the trading actions, we selected MySQL as the database solution, as it’s accessible and widely used. Version August 9, 2023 submitted to Journal Not Specified 23 of 26 Electricity Price Prediction @ Home Ar Trade Balance Electricity Price Prediction Platform We offers a wide range of ready-for-use, advanced Al forecasting solutions that are tailored for intraday, 7 days ahead, and long term energy trading. Daily Chart User Stats There are 25 online users. There are 732 users in total. 189 of which are subscribed. Node Stats There are 10 nodes. Last update was one minute ago. Figure 15. Homepage of the Demo Web Application Electricity Price Prediction Selectable Date Range Picker Selectable Date Range Picker & Home Electricity Price A Trade (3 Balance 300 250 200 CJ rv [] Predict MILPITAS I_NOO8 ~~ | £9(01/01/2023 - 01/02/2024] -| Predicted Prices ES ERASMAS CoyFFEEes “Fey FFE FE EFF E IEF ES TEES Amount (RTM: 231.18385) - | Trading Interface Prediction Price Detail Show entries Search:| | Node 4 start End Price ¥ MILPITAS_1_NOO8 Jan. 2, 2023, 1a.m. Jan. 2, 2023, 2 a.m. 149.97271275 MILPITAS_1_N008 Jan. 2, 2023, 2 a.m. Jan. 2, 2023, 3 a.m. 144.066131625 MILPITAS_1_NOO08 Jan. 2, 2023, 3 am. Jan. 2, 2023, 4 a.m. 139.4948566 - © - Figure 16. Trading Page of the Demo Web Application Version August 9, 2023 submitted to Journal Not Specified 24 of 26 Electricity Price Prediction (@ Home Ar Trade (3 Balance Balance Username Email Balance ($) Balance (kWh) admin admin@admin.com 10000.0 0.0 Transactions Time Action RTM ($) Units (kWh) April 9, 2023, 11:22 p.m. Buy 23.0 100.0 Figure 17. Balance Page of the Demo Web Application 6. Conclusion 6.1. Summary In summary, we have accomplished several significant milestones and generated valuable insights for the field. Here is a rephrased summary of the major achievements and findings: Literature Review and Technology Survey: We commenced with an extensive review of existing research and technologies pertaining to electricity price forecasting. This compre- hensive examination provided a solid knowledge base and understanding of the problem statement to develop more reliable and accurate models for electricity price forecasting. Data Collection and Preprocessing: The team successfully gathered and processed the necessary data such as market price data was collected from California Independent System Operator, CAISO. The demand forecast dataset was also collected from CAISO. The weather data was collected from CMIS. We developed a Python script to automate the data collection and cleaning process, overcoming challenges related to data availability and formatting. Model Development and Evaluation: We involved training and evaluating six distinct machine learning models: linear regression, GDBT, GRU, LSTM, Transformer, and a novel model proposed by the team. The models were implemented utilizing both CPU and GPU resources to optimize performance and stability. Evaluation metrics such as RMSE, MAE, and MAPE were employed to assess the models’ predictive performance. Visualization and Seasonality Analysis: In addition to developing and evaluating machine learning models, we explored seasonality patterns within the time series dataset. We utilized visualization techniques and created a user interface and web application using jQuery and Django to enhance data presentation and user experience. 6.2. Future Work In this paper, we applied the machine learning models to the data from ten selected nodes in the San Francisco Bay Area due to time constraints. This paper can be extended to the entire California ISO system or even further to other states and countries. With more training data, the performance of our proposed model can be improved further. In data collection, we considered the historical price, system demand, and weather impacts when predicting the electricity price. For future research, the price prediction can be expanded to consider some other factors, such as the price of natural gas. If the natural gas price is higher, the electricity generation price is also higher, which affects the electricity market price. Therefore, the natural gas price can be an attribute in future predicting models. While we have used advanced machine learning techniques in this paper, there are still many cutting-edge approaches and techniques available in the academic and industry spaces that can be applied to enhance our model. Exploring different architectures and feature engineering techniques will be a critical step in future work. Version August 9, 2023 submitted to Journal Not Specified 25 of 26 Our research can be extended towards self-consumption and car battery optimization, in order to manage the demand side of the equation more effectively. By predicting prices, users can optimize their energy consumption and storage strategies, helping to balance supply and demand, and create a more efficient and sustainable grid. In conclusion, while our paper has made important strides in forecasting electricity prices, there is significant potential for further development and refinement. Our future work will continue to push the boundaries of what is possible in electricity price forecasting, paving the way for smarter and more sustainable electricity markets. Acknowledgement We would like to acknoledge Dr. Qin Wang for guiding us in data collection, under- standing the data, model development and model evaluation. Without his help it was not possible to complete this project. This paper is a part of our MS research project. We like to acknowledge our project teammates Minh-Tam Pham and Harshitha Ramesh for helping in the project work and writing the first draft. We wold also like to thank Dr. Lee Chang for his continuous support and guidance during the project work. References 1. EIA projects renewables share of U.S. electricity generation mix will double by 2050 — eia.gov. https: / /www.eia.gov/todayinenergy / detail. php?id=46676. [Accessed 01-Jun-2023]. 2. Janke, T.; Steinke, F. Forecasting the price distribution of continuous intraday electricity trading. Energies 2019, 12, 4262. 3. Newbery, D.; Pollitt, M.G.; Ritz, R.A; Strielkowski, W. Market design for a high-renewables European electricity system. Renewable and Sustainable Energy Reviews 2018, 91, 695-707. 4. California ISO - Business practice manuals — caiso.com. http://www.caiso.com/rules/Pages/ BusinessPracticeManuals/Default.aspx. [Accessed 01-Jun-2023]. 5. Silva-Rodriguez, L.; Sanjab, A.; Fumagalli, E.; Virag, A.; Gibescu, M. Short term wholesale electricity market designs: A review of identified challenges and promising solutions. Renewable and Sustainable Energy Reviews 2022, 160, 112228. 6. Kath, C,; Ziel, F. The value of forecasts: Quantifying the economic gains of accurate quarter- hourly electricity price forecasts. Energy Economics 2018, 76, 411-423. 7. Administration, U.E.I. U.S. Wholesale Electricity Prices Higher In 2021From Higher Natural Gas Prices — cleantechnica.com. https://cleantechnica.com/2022/01/07/u-s-wholesale-electricity- prices-higher-in-2021-from-higher-natural-gas-prices/. [Accessed 01-Jun-2023]. 8. Tschora, L.; Pierre, E.; Plantevit, M.; Robardet, C. Electricity price forecasting on the day-ahead market using machine learning. Applied Energy 2022, 313, 118752. 9. Vaswani, A.; Shazeer, N.; Parmar, N.; Uszkoreit, J.; Jones, L.; Gomez, A.N.; Kaiser, L.; Polosukhin, I. Attention is all you need. Advances in neural information processing systems 2017, 30. 10. Hochreiter, S.; Schmidhuber, J. Long short-term memory. Neural computation 1997, 9, 1735-1780. 11. Afnan, S.; Guan, J.; Pham, M.T.; Ramesh, H. Data-Driven Electricity Trading Models and Integrated Solution Using Machine Learning Approaches 2023. 12. Homepage - U.S. Energy Information Administration (EIA) — eia.gov. https://www.eia.gov/. [Accessed 01-Jun-2023]. 13. Electric Reliability Council of Texas — ercot.com. https://www.ercot.com/. [Accessed 01-Jun-2023]. 14. Ansergy - WECC Power & Gas — ansergy.com. https://ansergy.com/. [Accessed 01-Jun-2023]. 15. Sharma, A.; Jain, S.K. A novel seasonal segmentation approach for day-ahead load forecasting. Energy 2022, 257, 124752. 16. Carriere, T.; Kariniotakis, G. An integrated approach for value-oriented energy forecasting and data-driven decision-making application to renewable energy trading. IEEE transactions on smart grid 2019, 10, 6933-6944. 17. Ugurlu, U.; Oksuz, I; Tas, O. Electricity price forecasting using recurrent neural networks. Energies 2018, 11, 1255. 620 621 622 623 624 625 Version August 9, 2023 submitted to Journal Not Specified 26 of 26 18. 19. 20. 21. 22. 23. 24. 25. 26. 27. 28. 29. 30. 31. 32. 33. 34. 35. 36. 37. 38. Chinnathambi, R.A.; Plathottam, S.J.; Hossen, T.; Nair, A.S.; Ranganathan, P. Deep neural networks (DNN) for day-ahead electricity price markets. In Proceedings of the 2018 IEEE electrical power and energy conference (EPEC). IEEE, 2018, pp. 1-6. Xiao, C.; Sutanto, D.; Muttaqgi, K.M.; Zhang, M. Online sequential extreme learning machine algorithm for better prediction of the real-time electricity price under dynamic environmental changes. In Proceedings of the 2019 IEEE Industry Applications Society Annual Meeting. IEEE, 2019, pp. 1-6. Bhagat, M.; Alamaniotis, M.; Fevgas, A. Extreme interval electricity price forecasting of wholesale markets integrating ELM and fuzzy inference. In Proceedings of the 2019 10th International Conference on Information, Intelligence, Systems and Applications (IISA). IEEE, 2019, pp. 1-4. Luo, S.; Weng, Y. A two-stage supervised learning approach for electricity price forecasting by leveraging different data sources. Applied energy 2019, 242, 1497-1512. Dehghan-Banadaki, A.; Taufik, T.; Feliachi, A. Big data analytics in a day-ahead electricity price forecasting using tensorflow in restructured power systems. In Proceedings of the 2018 International Conference on Computational Science and Computational Intelligence (CSCI). IEEE, 2018, pp. 1065-1069. Atef, S.; Eltawil, A.B. A comparative study using deep learning and support vector regression for electricity price forecasting in smart grids. In Proceedings of the 2019 IEEE 6th International Conference on Industrial Engineering and Applications (ICIEA). IEEE, 2019, pp. 603-607. Deepa, S.; Gobu, B.; Jaikumar, S.; Arulmozhi, N.; Kanimozhi, P; et al. Adaptive regularized ELM and improved VMD method for multi-step ahead electricity price forecasting. In Proceedings of the 2018 17th IEEE International Conference on Machine Learning and Applications (ICMLA). IEEE, 2018, pp. 1255-1260. Gabrielli, P.; Wiithrich, M.; Blume, S.; Sansavini, G. Data-driven modeling for long-term electricity price forecasting. Energy 2022, 244, 123107. Zhao, Z.; Xia, C.; Chi, L.; Chang, X,; Li, W.; Yang, T.; Zomaya, A.Y. Short-term load forecasting based on the transformer model. Information 2021, 12, 516. Ozozen, A.; Kayakutlu, G.; Ketterer, M.; Kayalica, O. A combined seasonal ARIMA and ANN model for improved results in electricity spot price forecasting: Case study in Turkey. In Proceedings of the 2016 Portland International Conference on Management of Engineering and Technology (PICMET). IEEE, 2016, pp. 2681-2690. Huang, C.; Yan, Z.; Yun, J.; Xie, L.; Li, Y. Enhanced real-time electricity price prediction with a novel feature selection technique. In Proceedings of the 2019 IEEE Sustainable Power and Energy Conference (iSPEC). IEEE, 2019, pp. 113-118. Yang, H.; Schell, K.R. Real-time electricity price forecasting of wind farms with deep neural network transfer learning and hybrid datasets. Applied Energy 2021, 299, 117242. Chang, Z.; Zhang, Y.; Chen, W. Electricity price prediction based on hybrid model of adam optimized LSTM neural network and wavelet transform. Energy 2019, 187, 115804. Rasheed, M.B.; Qureshi, M.A; Javaid, N.; Alquthami, T. Dynamic pricing mechanism with the integration of renewable energy source in smart grid. IEEE Access 2020, 8, 16876-16892. Drucker, H.; Burges, C.J.; Kaufman, L.; Smola, A.; Vapnik, V. Support vector regression machines. Advances in neural information processing systems 1996, 9. Cho, K.; Van Merriénboer, B.; Gulcehre, C.; Bahdanau, D.; Bougares, F.; Schwenk, H.; Bengio, Y. Learning phrase representations using RNN encoder-decoder for statistical machine translation. arXiv preprint arXiv:1406.1078 2014. ISO, C. California ISO Open Access Same-time Information System. [Accessed 01-Jun-2023]. ISO, C. California ISO Electricity Price Map. [Accessed 01-Jun-2023]. CIMIS — cimis.water.ca.gov. https://cimis.water.ca.gov/. [Accessed 01-Jun-2023]. Zhang, G.; Wei, C.; Jing, C.; Wang, Y. Short-Term Electrical Load Forecasting Based on Time Augmented Transformer. International Journal of Computational Intelligence Systems 2022, 15, 67. Liao, S.; Wang, Z.; Luo, Y.; Liang, H. Locational marginal price forecasting using Transformer- based deep learning network. In Proceedings of the 2021 40th Chinese Control Conference (CCQ). IEEE, 2021, pp. 8457-8462. Disclaimer/Publisher’s Note: The statements, opinions and data contained in all publications are solely those of the individual author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to people or property resulting from any ideas, methods, instructions or products referred to in the content. lipsum 673 674 675 676 677","libVersion":"0.3.2","langs":""}