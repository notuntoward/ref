{"path":"lit/lit_notes_OLD_PARTIAL/RektPunk24nonCrossMQBoostQR.pdf","text":"Multiple quantiles estimation model maintaining non-crossing condition (or monotone quantile condition) using LightGBM and XGBoost 16 stars 3 forks 4 watching 1 Branch 1 Tags Activity Public repository 1 Branch 1 Tags Go to file t Go to file Add file Code RektPunk Update README.md e4288c3  · 2 days ago .github [Chore] introduce enum (#7 ) last week examples Chore - add examples 2 days ago mqboost [Chore] Split eval funcs (#8 ) 4 days ago .gitignore update engine 3 weeks ago .pre-commit-config.yaml [Feature] Add hyperparameter opti… 2 weeks ago README.md Update README.md 2 days ago poetry.lock [Feature] Add hyperparameter opti… 2 weeks ago pyproject.toml [Release] v0.1.5 ( #6 ) last week MQBoost releaserelease v0.1.5v0.1.5 MQBoost introduces an advanced model for estimating multiple quantiles while ensuring the non-crossing condition (monotone quantile condition). This model harnesses the capabilities of both LightGBM and XGBoost, two leading gradient boosting frameworks. RektPunk / MQBoost Code Issues Pull requests Actions Projects Security Insights 7/31/24, 4:28 PM RektPunk/MQBoost: Multiple quantiles estimation model maintaining non-crossing condition (or monotone quantile condition) using … https://github.com/RektPunk/MQBoost 1/3 By implementing the hyperparameter optimization prowess of Optuna, the model achieves great performance. Optuna's optimization algorithms fine-tune the hyperparameters, ensuring the model operates efficiently. Install using pip: MQRegressor: A model for quantile regression Installation p i p i n s t a l l m q b o o s t Usage Features Parameters # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - # > > M Q B o o s t . _ _ i n i t _ _ x # E x p l a n a t o r y d a t a ( e . g . , p d . D a t a F r a m e ) . # C o l u m n n a m e d ' _ t a u ' m u s t n o t b e i n c l u d e d . y # R e s p o n s e d a t a ( e . g . , n p . n d a r r a y ) . a l p h a s # T a r g e t q u a n t i l e s . # M u s t b e i n a s c e n d i n g o r d e r a n d c o n t a i n n o d u p l i c a t e s . o b j e c t i v e # [ O p t i o n a l ] O b j e c t i v e t o m i n i m i z e , \" c h e c k \" ( d e f a u l t ) o r \" h u b e r \" . m o d e l # [ O p t i o n a l ] B o o s t i n g a l g o r i t h m t o u s e , \" l i g h t g b m \" ( d e f a u l t ) o r \" x g b o o s t \" . d e l t a # [ O p t i o n a l ] P a r a m e t e r f o r \" h u b e r \" o b j e c t i v e . # U s e d o n l y w h e n o b j e c t i v e = = \" h u b e r \" . # M u s t b e s m a l l e r t h a n 0 . 1 . # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - # > > M Q B o o s t . t r a i n p a r a m s # [ O p t i o n a l ] M o d e l p a r a m e t e r s ; d e f a u l t s t o N o n e . # A n y p a r a m s r e l a t e d t o m o d e l c a n b e u s e d e x c e p t \" o b j e c t i v e \" . # I f N o n e , h y p e r p a r a m e t e r o p t i m i z a t i o n i s e x e c u t e d . n _ t r i a l s # [ O p t i o n a l ] N u m b e r o f h y p e r p a r a m e t e r o p t i m i z a t i o n t r i a l s . # D e f a u l t s t o 2 0 . # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - # > > M Q B o o s t . p r e d i c t x # E x p l a n a t o r y d a t a ( e . g . , p d . D a t a F r a m e ) . a l p h a s # [ O p t i o n a l ] T a r g e t q u a n t i l e s f o r p r e d i c t i o n . # D e f a u l t s t o a l p h a s u s e d i n t r a i n . # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - # > > M Q B o o s t . o p t i m i z e _ p a r a m s n _ t r i a l s # N u m b e r o f h y p e r p a r a m e t e r o p t i m i z a t i o n t r i a l s g e t _ p a r a m s _ f u n c # [ O p t i o n a l ] M a n u a l h y p e r p a r a m e t e r f u n c t i o n v a l i d _ d i c t # [ O p t i o n a l ] M a n u a l l y s e l e c t e d v a l i d a t i o n s e t s # K e y s m u s t c o n t a i n \" d a t a \" a n d \" l a b e l \" # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - # README 7/31/24, 4:28 PM RektPunk/MQBoost: Multiple quantiles estimation model maintaining non-crossing condition (or monotone quantile condition) using … https://github.com/RektPunk/MQBoost 2/3 Please refer to the Examples provided for further clarification. Releases 1 Release v0.1.5 Latest last week Contributors 2 RektPunk chulhongsung Sungchul Hong Languages Python 100.0% Example 7/31/24, 4:28 PM RektPunk/MQBoost: Multiple quantiles estimation model maintaining non-crossing condition (or monotone quantile condition) using … https://github.com/RektPunk/MQBoost 3/3","libVersion":"0.3.2","langs":""}