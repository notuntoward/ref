{"path":"lit/lit_sources.backup/Shi19optBattCtrlAging.pdf","text":"1 Optimal Battery Control Under Cycle Aging Mechanisms in Pay for Performance Settings Yuanyuan Shi, Bolun Xu, Yushi Tan, Daniel Kirschen, Baosen Zhang Abstract— We study the optimal control of battery energy storage under a general “pay-for-performance” setup such as providing frequency regulation and renewable integration. In these settings, batteries need to carefully balance the trade-off between following the instruction signals and their degradation costs in real-time. Existing battery control strategies either do not consider the uncertainty of future signals, or cannot accurately account for battery cycle aging mechanism during operation. In this work, we take a different approach to the optimal battery control problem. Instead of attacking the complexity of battery degradation function or the lack of future information one at a time, we address these two challenges together in a joint fashion. In particular, we present an electrochemically accurate and trackable battery degradation model called the rainﬂow cycle- based model. We prove the degradation cost is convex. Then we propose an online control policy with a simple threshold structure and show it achieve near-optimal performance with respect to an ofﬂine controller that has complete future information. We explicitly characterize the optimality gap and show it is independent to the duration of operation. Simulation results with both synthetic and real regulation traces are conducted to illustrate the theoretical results. I. INTRODUCTION A conﬂuence of industry drivers – including increased deployment of renewable generations, the high capital cost of managing grid peak demands, and large investments in grid infrastructure for reliability – has created keen interest in building and employing more energy storage systems [1]. Plenty of energy storage technologies have been developed to serve different applications, such as pumped hydro-power, compressed air energy storage, batteries, ﬂywheels and many more [2]. Among these different technologies, battery energy storage (BES) (e.g., lithium-ion batteries) features quick re- sponse time, high round-trip efﬁciency, pollution-free opera- tion, and ﬂexible power/energy ratings [3]. These characteris- tics make it an ideal choice for a wide range of power system applications, including integration of renewable resources [4], grid frequency regulation [5] and behind-the-meter load man- agement of commercial and residential users [6]. For example, in 2015, there are 153.5MW newly installed battery energy storage devices in the US [7], which is roughly four times the amount of BES installment in 2014. It’s worth mentioning that over 80% of the installed capacity in 2015 occurred within the territory of PJM Independent System Operator (ISO), and the predominant use was frequency regulation. The authors are with the Department of Electrical Engineering, University of Washington, Seattle, Washington 98125, (e-mail:{yyshi, xubolun, ystan, kirschen, zhangbao}@uw.edu) The authors are partially supported by the University of Washington Clean Energy Institute. The focus of the paper is on the optimal control of battery energy storage under a general “pay for performance” setup: a battery is incentivized to follow certain instruction signals and is penalized when it cannot. For example, a battery participating in frequency regulation would receive a signal and is paid based on how well it follows the signal. Another important application that falls under this setup is a battery used by customers with onsite renewable generations, where the customers may need to purchase more expensive power from the grid if the battery cannot smooth out the local net demand. The common theme of the problems under the pay for performance setup is that the signal the battery should follow is inherently random and the control decisions must be made in real-time. Furthermore, battery storage naturally couples the decisions across time because of its ﬁnite energy and power capacities. Therefore, ﬁnding the optimal control policy for a battery is essentially a constrained online stochastic control problem [8]. This online problem is challenging for two main reasons: 1) battery degradation and 2) lack of future information. A vital aspect of energy storage operation is to accurately model the operational cost of battery, which mainly comes from battery cells losing their energy capacities under repeated cycling [9]. Analogous to cell phone batteries losing their capacity after several years of use, larger batteries used in the grid also lose their capacity with every charge and discharge action (sometimes called capacity fading) [10]. In fact, overly aggressive use of batteries can often deplete their useful capacities in a matter of months. However, battery degradation is a complex process governed by electrochemical reactions and depends on multiple environmental and utilization factors. The second challenge of the lack of information is common to all stochastic control problems. At any given time, a decision must be made without knowing the future signals. This is further complicated by the coupling constrains introduced by battery. These two challenges are illustrated well in the the fast frequency regulation problem. Frequency regulation is a mech- anism used by power system operators to correct the short timescale imbalance between generation and demand in the overall grid. In fast regulation (e.g., regD in PJM), a signal representing the imbalance is broadcasted every 2 or 4 sec- onds. Having enough energy to follow the regulation signals is critical to the function of the power system, especially as renewables increase the uncertainties in both generation and supply. Frequency regulation is also a natural application for batteries because of the fast variations and roughly zero-mean nature of the regulation signal. By participating in regulation, aarXiv:1709.05715v4 [math.OC] 30 Jul 2018 2 battery receives a ﬁxed payment ahead of the time. However, if it cannot follow the regulation signal, then a penalty is charged based on the mismatch. Therefore, at every time step, a battery must balance its degradation from following the regulation signals with the penalty of not doing so, while not knowing the future value of the signal. In the past, many studies have attacked the battery con- trol problem by focusing on one of the challenges. On one hand, by assuming the degradation of batteries is a quadratic function of the charge/discharge powers, we recover a type of constrained stochastic quadratic regulation problem where the key challenge is the lack of future information [11], [12]. On the other hand, one can focus on the degradation of the batteries, by employing accurate electrochemical models while assuming full knowledge of the future [13], [14]. Both directions have led to signiﬁcant advances by still remain unsatisfactory. Even by assuming the signal that a battery faces is Gaussian, a constrained linear quadratic Gaussian problem is still extremely challenging to solve and provide any theoretical performance guarantees. Similarly, solving the optimization problem with accurate electrochemical models is by no means trivial even under full knowledge, and it is usually difﬁcult to adapt the solutions to an online form. Given these difﬁculties, batteries still only serve as emergency backup, or used actively in grid services when they are owned by the utilities and are subsidized under renewable portfolio incentives. In this paper, we take a different approach to the battery control problem. Instead of attacking the complexity of the degradation function or the lack of future information one at a time, we address these two challenges together in a joint fashion. Surprisingly, we provide a provably near optimal online algorithm for battery control. In particular, we show that under a form of so-called cycle based degradations, there is an online strategy that is within a constant additive gap of the optimal ofﬂine strategy under all possible future signals. We explicitly characterize this gap and relate it to the set of possible future signals. The key insight of this result comes from a better understanding of the degradation of electrochemical batteries and how it relates to the control problem. At a high level, capacity fading of these batteries due to charging and discharging is similar to the fatigue process of materials subjected to cyclic loading [15]. For each cycle, the capacity fades as a function of the depth of that cycle. In past approaches, these cycles were studied in the time domain, leading to complex optimization problems. In contrast, we look at the problem in the cycle-domain, where the problem naturally decouples according to each cycle of the charge/discharge proﬁle. This approach has a loose analogy with time/frequency duality, where some problems are much simpler in the frequency domain than in the time domain. Altogether, our work makes three contributions to the current state-of-art in battery control: 1) We prove the convexity of the rainﬂow cycle counting algorithm, which enables this electrochemically accurate model to be used in various battery optimization prob- lems and guarantees the solution quality. 2) We provide a subgradient algorithm to solve the opti- mization problem efﬁciently and optimally for ofﬂine battery planning and dispatch. 3) We offer an online battery control policy with a sim- ple threshold structure, and achieve near-optimal per- formance with respect to a ofﬂine controller that has complete future information. The online control policy proposed in this paper takes a simple threshold structure which limits a battery’s state of charge (SoC). It reacts to new battery instructions without having to solve new optimization problems, leading to better computational performances than algorithms based on model predictive control and dynamic programming. Compared with traditional threshold control strategies, such as pre-ﬁxed SoC bounds [16], or proportional integral (PI) controller [17], our policy incorporates the application market prices and battery aging model into the SoC threshold calculations, which improves the model accuracy and making it applicable to most electrochemical battery cells. These considerations allows us to derive performance guarantees in form of a bounded con- stant gap to the full information optimal solution. This battery control policy can be applied to any power system application that faces stochastic signals and has constant prices over a speciﬁc period, such as frequency regulation and behind-the- meter peak shaving. The rest of the paper is organized as follows. Section II covers the background and prior works on the battery control problem. Section III describes the proposed rainﬂow cycle- based degradation model. Section V sketches the convexity proof and the subgradient algorithm for solving the ofﬂine problem. Section VI describes the proposed online control strategy and the optimality proof. We provide a case study in Section VII using real data from PJM frequency regulation market, and demonstrate the effectiveness of the proposed control algorithm in maximizing proﬁts as well as extending battery lifetime. Finally, Section VIII concludes the paper and outlines directions for future work. A preliminary version of this paper has appeared in [18]. The current paper expands signiﬁcantly on [18] and in particu- lar, Theorem 1 on the convexity of the cycle depth degradation function and the simulations are new. II. BACKGROUND AND PRIOR WORKS The operation of battery energy storage has received much recent research attention because of the importance of batteries to a power system with high penetration of renewables and maturing technologies [4]–[6], [8], [19]–[21]. In these works, the degradation cost of the batteries are modeled in different ways. The authors of [4], [8], [19] assume battery has a ﬁxed lifetime and ignore the degradation cost in optimization. This assumption works well when batteries are used sparingly, but tend to lead to overly aggressive actions for ﬁner time resolution applications such as frequency regulation. Other energy storage control studies include degradation models either based on battery charging/discharging power [5], [6] or energy throughput [20], [22], [23]. For example, [6] as- sumes a convex degradation cost model based on battery charging/discharging power for households demand response, and [20] assign a constant price 2$/M W h based on battery 3 energy throughput. These degradation models are convenient to be incorporated in existing optimization problems, at a cost of losing accuracy in quantifying the actual degradation cost. For example, a Lithium Nickel Manganese Cobalt Oxide (NMC) battery has ten times more degradation when operated at near 100% cycle depth of discharge (DoD) compared to operated at 10% DoD for the same amount of charged power or energy throughput [24]. However, the impact of cycle depth is difﬁcult to capture using power or energy based degradation functions. The battery aging process is fundamentally described by a set of partial differential and algebraic equations [13], [25], however, they are in some sense too detailed to be used in power system applications. Even with dedicated state-of-the- art algorithms, these equations take several seconds to solve, making them too slow to be used in applications like frequency regulation where one receives a signal every 2 or 4 seconds. To mitigate these difﬁculties, we use a semi-empirical degradation model that combines theoretical battery aging mechanism with experimental observations. This model is motivated by viewing battery capacity fading as a material fatigue process, where a deeper charge/discharge cycle stresses battery much more than an equivalent number of shallower cycles. Then the relationship between cycle depth and battery degradation is deﬁned by the cycle depth-number curve (Fig. 1), which are normally provided by battery manufacturers or can be estimated from ﬁeld measurements. Cycle depthNumber of cycles Fig. 1. Battery cycle depth and operating number curve [26]. The x-axis is the cycle depth in percent, and y-axis is the number of cycles that battery could be operated under certain condition before the end of life. Under this cycle aging model, each cycle causes indepen- dent stress, and the loss of battery life is the the accumulation of degradation from all cycles. A natural question is how one should count the number of cycles in a general proﬁle, since all of them would be of heterogenous depth. Here we use the “rainﬂow” algorithm [27], which is the most widely adopted algorithm for cycle identiﬁcation in material fatigue analysis [28] as well as for battery degradation [9], [14], [29]– [31]. We show that this electrochemical accurate degradation model is actually convex, which is a key step in deriving the online control algorithm and is of independent interest to many other battery applications. The online nature of the battery control problem has perhaps received more attention from the control community. Multiple types of approaches have been developed, including model predictive control [19], [32], [33], stochastic and dynamic programming [4], [34]–[37]. The authors of [32] derive a model predictive control (MPC)-based for battery energy stor- age and wind integration, although without any performance guarantees. Recent works [19], [33] do include results that bound the performance gap of online algorithms, but it is difﬁcult to evaluate the quality of these bounds since they are either quite loose or depend on complicated optimization problems themselves that grow with the time of operation. In addition, none of these bounds considers a cycle-based degradation problem. Our results in this paper provide an online algorithm with a constant gap to the ofﬂine optimal that is independent to the length of the operation time. In addition to MPC type of algorithms, another widely used strategy is dynamic programming (DP). For example, [4] and [34] consider using DP for storage operation with a co-located wind farm, [35] and [36] for operating storage with end-user demands, and [37] for storage with demand response. However, for real-time control problems, the battery state space, action space and the instruction signal are all continuous. Standard DP discretization approaches tend to cause the dimension of the problem to grow exponentially. Also, implementing these algorithms requires the distributional information of the random instruction signal, which may not be readily available. In contrast, our algorithm does not require any distributional information. Remark 1. In this paper we focus on the impact of cycle- depth on the capacity lifetime of batteries. In addition to cycle- depth, numerous other factors contribute to capacity fading. For example, the temperature of the battery has a dramatic inﬂuence in its lifetime. However, in grid applications, the temperature of the cells are normally controlled to be within a narrow band. Similarly, other factors such as extremely high C- rate and unbalanced battery cells either do not come into play for grid applications or are controlled by lower level power electronics [9]. III. MODEL In this section we describe the battery operation model, the rainﬂow cycle-based battery aging cost, and the pay for per- formance market setup. Then we state the main optimization problem on how to balance revenue from frequency regulation and the degradation cost of battery in an online fashion. A. Battery Operations We consider an operation deﬁned over ﬁnite discrete control time steps t ∈ {1, . . . , T }, and each control time interval has a duration of τ . 1 Let xt be the energy stored in the battery– the state of charge (SoC)–at the end of time t. By convention, xt is a normalized quantity between 0 (empty battery) and 1 (full battery). At any time t, the battery can either charge with power ct (in units of kW) or discharge with power dt (in units of kW). Then its state of charge evolves according to the following linear difference equation [14], [39]: xt = xt−1 + τ ηc E ct − τ ηdE dt. (1) 1In practice, τ is set by the power electronic based battery management system, and is normally in the scale of milliseconds [38]. 4 where the initial battery SoC is assumed to be known as x0. ηc and ηd are the charging and discharging efﬁciency and E (in units of kWh) is the rated energy capacity of battery. By convention, ηc is between 0 and 1 and ηd is larger than 1. For ease of notations, we also deﬁne x = (xt) ∈ RT , c = (ct) ∈ RT , and d = (dt) ∈ RT , where t = 1, 2, ..., T . For a given battery, there are three types of operational constraints. The ﬁrst is the limits of SoC, where the stored energy in the battery is constrained to be within a pre-deﬁned range. This constraint can arise from the health concerns since batteries like lithium-ion should not be charged completely full or discharged to be completely empty. It can also arise if batteries are used for other applications such as backup. In this paper, we assume that the SoC limits are given. The other two constraints on battery operation are the rate constraints on the charging and discharging powers, written as: x ≤ xt ≤ x, 0 ≤ ct ≤ P , and 0 ≤ dt ≤ P, where x and x is the minimum and maximum SoC of the battery, respectively; P is the battery power rating. We consider an optimization problem where a battery is incentivized to follow an instruction signal r ∈ RT from the system operator signifying the normalized net power imbalance in the system. We follow the convention that rt is normalized between −1 and 1, where rt > 0 represents a shortage of power (battery is asked to provide power) and rt ≤ 0 represents an excess of power (battery is asked to absorb power). Suppose the operation revenue is R(c, d, r), a function of battery power output c, d and the instruction signal. The operational cost comes from the battery degradation, denoted here by f (c, d), a function of battery charging/discharging responses. The exact form of f (·), namely the rainﬂow cycle- based degradation function, is introduced in the next section. The optimization objective is to maximize the net utility of the battery: max c,d R(c, d, r) − f (c, d) (2a) s.t. xt = xt−1 + τ ηc E ct − τ ηdE dt , (2b) x ≤ xt ≤ x , (2c) 0 ≤ ct ≤ P , (2d) 0 ≤ dt ≤ P , (2e) where (2b) is the state evolution equation, (2c) is the SoC constraint, (2d) and (2e) are the power constraints. Note here we may include a constraint that storage cannot charge and discharge at the same time [40], but it turns out that this condition will always be satisﬁed in our setting. Solving (2) has proven to be difﬁcult for two reasons. The ﬁrst is that most realistic cycle-based degradation functions are not well understood (e.g., they are not known to be convex), making the deterministic version of (2) nontrivial [9]. The second is that in real-time applications such as frequency response, the signal r is inherently random and difﬁcult to forecast [23], [41], while the state of the problem xt is con- strained and coupled over time. Therefore, even for relatively simple forms of f (e.g. f = ∑ c2 t + d 2 t ), there are no optimal Fig. 2. Principles of rainﬂow cycle extraction. Given four successive point s1, s2, s3 and s4, the cycle s2-s3 is extracted and the points s2 and s3 are discarded. Then s1 to s4 form a charging cycle. or provably suboptimal online algorithms. The next section describes the rainﬂow cycle-based degradation model in detail, and the rest of the paper shows that rather surprisingly, this reality will lead to a simple provable optimal online algorithm. B. Cycle Counting via Rainﬂow To model the battery degradation cost f (c, d), we take the rainﬂow cycle-based method. This algorithm is used exten- sively in materials fatigue stress analysis to count cycles and quantify their depths and has also been extensively applied to battery life assessment [9], [14], [29]–[31]. The rainﬂow method identiﬁes cycles from local extrema in battery SoC proﬁle. Consider a SoC proﬁle x with lo- cal extrema s1, s2, · · · . The principle of the rainﬂow cycle counting uses four successive local extrema. This is illustrated in Figure 2, where s1, s2, s3 and s4 represent four succes- sive local extrema. Three consecutive ranges are determined: ∆s1 = |s1 − s2|, ∆s2 = |s2 − s3| and ∆s3 = |s3 − s4|. If ∆s2 ≤ ∆s1 and ∆s2 ≤ ∆s3 (∆s2 range is less than or equal to its two adjacent ranges ∆s1 and ∆s3) then: 1) a full cycle (or viewed as a charging half cycle and a discharging half cycle) represented by its extreme values s2 and s3 is extracted; 2) the two points s2 and s3 are discarded; 3) the two remaining parts of the sequence are connected to each other. If not, then the following point is considered and the same test is applied, using points s2, s3, s4 and the new point. The procedure is repeated until the last point of the sequence is reached. After this process, the remaining points constitute what is called the residue, in which every two consecutive points form either a charging or discharging half cycle. The rules of the Rainﬂow algorithm is summarized in ﬂow chart Fig 3. Let Rainﬂow be the functional form of the rainﬂow counting algorithm in Figure 3, where it takes an SoC proﬁle x ∈ RT as the input, extracts all local extrema s1, s2, · · · sN of x and outputs all the cycle depths: (v, w) = Rainﬂow(x) (3) where v is the vector of charging half cycles and w is the vector of discharging half cycles. 5 Fig. 3. Flow chart of Rainﬂow cyle counting algorithm Since cycle depths only depend on the relative differences of the turning point of the SoC proﬁle and not on the initial SoC value, they can be calculated from (c, d) (v, w) = Rainﬂow( τ ηc E c − τ ηdE d ). (4) C. Battery Degradation Cost After counting the cycles, a cycle depth stress function Φ(u) is used to model the life loss from a single cycle of depth u measured in terms of (normalized) changes in the SoC. This function indicates that if a battery cell is repetitively cycled with depth u, then it can operate 1/Φ(u) number of cycles before reaching its end of life. The degradation cost function φ(·) is normalized between 0 and 1 with respect to the total battery life. For example, if a battery can operate 100, 000 cycles before end of life at 10% cycle depth, then a 10% depth cycle costs 1 100,000 of battery life, where φ(0.1) = 1 100,000 . In practice, this function can be estimated through empirical measurements, which is normally provided by battery manu- facturers. For most electrochemical batteries, Φ(u) is a convex function [9], [15], [42], popularly parameterized as a power function αu β [9], [15] or exponential functions αe βu [42]. Because cycle aging is a cumulative fatigue process [24], [42], the total life loss ∆L is the sum of the life losses from all half cycles: ∆L(v, w) = |v|∑ i=1 Φ(vi) 2 + |w|∑ i=1 Φ(wi) 2 , (5) where | · | is the cardinality of a vector. Note that we assume that the stress function Φ is the same for charging and discharging, but our results hold if different functions are used. If we substitute the rainﬂow algorithm as in (4) into (5), the incremental cycle aging can therefore be written as a function of the control actions c and d. To convert the loss of life to a cost, let B be the battery cell replacement unit cost in $/kWh and E be the capacity of the battery in kW h. Then the cycle aging cost function f (c, d) is f (c, d) = ∆L(c, d) · E · B. (6) D. Revenue Model We consider a generalized two-stage market model that captures the essence of all pay-for-performance market de- signs [43]. In the ﬁrst stage ahead of dispatch, a payment C (in units of $) is provided to the participant. Here, we assume that this payment is known and given and focus on the second stage. The second stage occurs in real-time, where a participant is given an instruction signal r and faces a penalty if it cannot follow the signal. That is, it by pays a over-response price θ ∈ R+ ($/MWh) for surplus injections or deﬁcient demands during each dispatch interval, and a under-response price π ∈ R+ ($/MWh) for deﬁcient injections or surplus demands. Then the total revenue is: R(c, d, r) =C − τ θ ∑T t=1 |ηcct − dt ηd − rt| + − τ π ∑T t=1 |rt − ηcct + dt ηd |+ , (7) where ηcct − dt ηd is the net charging power, rt ∈ [−P, P ] is the instructed regulation dispatch set-point for the dispatch time step t, with the convention positive values in rt represents charging instructions. This model captures the essence of two important appli- cations of storage in the grid: frequency regulation 2 and the demand shaping. In frequency regulation, C is the capacity payment and rt is the regulation signal sent every 2 to 4 second by the system operator. The penalty prices θ and π are published values. In demand shaping, a battery would enter into an agreement with a utility company to keep the demand of a customer at prescribed levels at payment C and rt can be thought as the net time-varying demand of the user. Here the penalty prices are also determined ahead of time. An important future direction is to extend our results to settings where the penalty prices are random in themselves, such as real-time arbitrage [44], [45]. E. Optimization Problem Summarizing the previous sections, we are attempting to solve the following optimization problem: min c,d τ T∑ t=1 [ θ|ηcct − dt ηd − rt| + − π|rt − ηcct + dt ηd |+] +   |v|∑ i=1 Φ(vi) 2 + |w|∑ i=1 Φ(wi) 2   · B · E (8a) s.t. xt = xt−1 + τ ηc E ct − τ ηdE dt (8b) x ≤ xt ≤ x , (8c) 0 ≤ ct ≤ P , (8d) 0 ≤ dt ≤ P . (8e) (v, w) = Rainﬂow(x). (8f) 2In practice, different system operators have slightly different rules for frequency response. Instead of cumbersome accounting for these rules, we focus on the generalized structure which is given in (7). 6 We are interested in solving (8) in two settings: Ofﬂine: In the off-line setting, the entire sequence of the instruction signal r is given. This is important in many planning and validation problems. Online: In the on-line setting, we solve ct and dt only based on the current and past information, {rt, rt−1, . . . , r1}. This models the real-time decisions that batteries need to make for charging and discharging. IV. MAIN RESULTS The main contributions of this paper is to provide results that lead to optimal and computational tractable algorithms to both the ofﬂine and online solutions of (8). The proofs of the theorems in this section are given in later sections and in the appendices. For the ofﬂine setting, we have the following theorem: Theorem 1 (Convexity). Suppose the battery cycle aging stress function Φ is convex. Then the ofﬂine version of the optimization problem in (8) is convex in the charge and discharge variables. This theorem settles an open question about cycle-based degradation cost functions [46], [47] and is used in the proof of the optimality of the online policy. The penalty term in the objective function (8a) is clearly convex in c and d, but the convexity of the term associated with the cycle stress functions is not obvious because of the nonlinear Rainﬂow(·) function in (8f). This result is important as it allows a range of exact approaches to convex optimization to be used on problems considering accurate battery degradation. The proof is somewhat tedious and we provide a sketch in Section V-A and the detailed proof is found in Appendix A. Next we state the optimality result with respect to the online optimization problem. Let Jg denote the value of (8) using the proposed online threshold control policy g, which will be presented later in Section VI-A. The key idea of the proposed policy is to ﬁrst calculate an optimal cycle depth as a function of the degradation cost and penalty price. At each time step, the battery will follow the instruction signal until it reaches the cycle depth bound and stops following afterwards. Let J ∗ denote the ofﬂine optima assuming all future information are known, then we have: Theorem 2 ( Online optimality). Suppose the battery cycle aging stress function Φ is strictly convex. The proposed online control policy g in Algorithm 1 (given in Section VI-A), has a constant worst-case optimality gap that is independent of the operation time duration T : sup r (Jg − J ∗) ≤ ϵ, ∀ x0 and ∀ {rt}, t ∈ {1, . . . , T }. where Jg is the cost achieved by Algorithm 1, J ∗ is the ofﬂine optimal cost and ϵ is a constant depending on problem parameters. The bound in the theorem is much tighter compared to stan- dard bounds for online optimization problems. Normally, one would compare the averaged regret, namely limT →∞ 1 T (Jg − J ∗) and a sublinear regret is considered to be “good” [48], [49]. Here, our result essentially shows that one can solve the online version of (8) with zero regret, since the constant ϵ do not depend on T . In contrast, most existing algorithms cannot even achieve sublinear regret. Again, the key to our result is to explore the particular cyclic structure of the rainﬂow based cost functions. By a case study on PJM frequency regulation market in Section VII, we show that the proposed control algorithm could signiﬁcantly improve the operational revenue up to 30% and the battery can last as much as 4 times longer. A useful corollary of Theorem 2 showing when the gap is 0: Corollary 1. Zero-optimality Gap If πηd = θ/ηc, then Jg = J ∗. That is, there is no gap between the cost achieved by Algorithm 1 and the optimal ofﬂine algorithm. For example, this corollary holds if the battery has the same charging and discharging efﬁciency 3 and the penalty prices for over and under injections are the same θ = π, then there exists an optimal online algorithm. The proof of Theorem 2 and Corollary 1 are given in the appendix and can be skipped if the reader wish to directly proceed to the algorithms. V. CONVEXITY AND SUBGRADIENT ALGORITHM In this section, we sketch the proof of Theorem 1 to provide some intuitions and then provide the exact form of subgradient algorithm. A reader more interested in the online algorithm can directly proceed to the next section. A. Proof of Theorem 1 Here we sketch the proof of Theorem 1. Without loss of gen- erality, we only consider the cost of charging cycles given the interchangeable and symmetric nature of charging/discharging variables. A detailed proof is given in Appendix A. To prove Theorem 1, it sufﬁces to show that the mapping from the SoC proﬁle x to degradation cost: f (x) =   |v|∑ i=1 Φ(vi) 2 + |w|∑ i=1 Φ(wi) 2   (v, w) = Rainﬂow(x) is convex in terms of x given the cycle stress function Φ(·) convex. That is, for any two SoC time series x, y ∈ RT , f (λx + (1 − λ)y) ≤ λf (x) + (1 − λ)f (y), ∀λ ∈ [0, 1]. (9) Intuitively, given two SoC series x and y, if they change in different directions, the two cancel each other out so that the left hand side of (9) is less than the right hand side by the convexity of Φ. When x changes in exactly the same direction as y for all time steps, the equality holds. The difﬁculty of proving this result lies in the fact that the rainﬂow function is a many-to-many function that maps a sequence in RT to a set of cycle depth of indeterminate length. The proof uses induction as described in the rest of this section. 3Again, we remind the reader that we keep the convention to write charging and discharging efﬁciencies differently in this paper for generality. Here, equal efﬁciency means ηd = 1 ηc 7 1) Unit step decomposition: First, we introduce the step function decomposition of SoC signal. Any SoC series x could be written out as a ﬁnite sum of step functions, where x = T∑ t=1 PtUt , (10) where Ut is a unit step function with a jump at time t deﬁned as: Ut(τ ) = { 1 τ ≥ t 0 otherwise. Fig. 4 gives an example of step function decomposition of x. We use this decomposition to write out x, y and λx+(1−λ)y Time SoC Profile P1U1 P2U2 P3U3 P4U4 Fig. 4. Decomposition of an example SoC Proﬁle into 4 step functions. as ﬁnite sum of step functions, where x = T∑ t=1 PtUt , y = T∑ t=1 QtUt , (11) λx + (1 − λ)y = T∑ t=1 ZtUt . (12) Note for x and y of different length, we can take T to be the maximum length since 0 can be appended to the shorter proﬁle. We use induction to prove Theorem 1 on the number of non-zero step changes in y. The base case is given in the next subsection, where y has a single step change. 2) Initial case: We ﬁrst show that f (x) is convex when a proﬁle has only one non-zero step change as shown in Fig. 5: Lemma 1. Under the conditions in Theorem 1, the rainﬂow cycle-based cost function f satisﬁes f (λx + (1 − λ)QtUt) ≤ λf (x)+(1−λ)f (QtUt) , ∀ λ ∈ [0, 1] , where x ∈ RT , and QtUt is a step function with a jump happens at time t with amplitude Qt. Time QtUt Fig. 5. Base case of the induction, where one of the proﬁles consists of a single step. The proof of this initial case requires analyzing the impact on all cycle depths from the single step and is given in Appendix A. 3) Induction Steps: Assuming Theorem 1 is true if one of the two proﬁles x or y has a single non-zero step. Now, assuming f is convex up to the sum of K step changes (arranged by time index): f (λx + (1 − λ)y) ≤ λf (x) + (1 − λ)f (y) , λ ∈ [0, 1] if y has K non-zero step changes (K < T ). We need to show f is convex up to the sum of K + 1 step changes (i.e., y is of length K + 1). The induction step proof relies on TimeSoC -1 -0.5 0 0.5 1 TimeSoC -1 -0.5 0 0.5 1 K K+1 x y Fig. 6. Induction step from K to K +1, where we assume that f is convex if one of the proﬁles (here the bottom proﬁle) has only K non-zero step changes and use it to show convexity of f where one proﬁle has K +1 non-zero steps. a case-by-case analysis. It contains three major conditions, where 1) ZK+1 (the amplitude of K + 1 step of the combined proﬁle) and ZK are in the same direction 2) ZK and ZK+1 are in different directions, with |ZK| ≥ |ZK+1| or 3) ZK and ZK+1 are different directions, with |ZK| < |ZK+1|. Each major category may contain some further sub-cases and requires careful accounting. Showing convexity for each sub- case ﬁnishes the overall convexity proof and the detailed reasoning is given in Appendix A. B. Subgradient Algorithm The convexity of the ofﬂine problem in (8) guarantees that it can solved efﬁciently and optimally using gradient descend method. However, the degradation cost term f (c, d) is not continuously differentiable (not differentiable at cycle junction points). Therefore, a subgradient method [50] is used in order to minimize this non-differentiable convex function. In the below section, we provide an efﬁcient solver algorithm with the exact analytical form of subgradients. Compared with previous literatures [14], [31] using numerical solvers, the proposed algorithm with analytical subgradients form can be much faster. With proper step size, the subgradient algorithm is guaranteed to converge to the optimal solution with a user- deﬁned precision level [50]. 8 To begin with, we re-write the constrained optimal battery control problem in (8) as an unconstrained optimization prob- lem using a log-barrier function [50]: min c,d J(·) :=τ T∑ t=1 [ θ|ηcct − dt ηd − rt|+ − π|rt − ηcct + dt ηd | +] +   |v|∑ i=1 Φ(vi) 2 + |w|∑ i=1 Φ(wi) 2   EB − 1 λ · { T∑ t=1 log(x − xt) + T∑ t=1 log(xt − x) + T∑ t=1 log(P − ct) + T∑ t=1 log(ct) + T∑ t=1 log(P − dt) + T∑ t=1 log(dt)} (13a) s.t. xt = x0 + t∑ k=1 τ ηc E ck − t∑ k=1 τ ηdE dk , (13b) Constraint (13b) comes from the battery dynamics equation (8b): xt = xt−1 + τ ηc E ct − τ ηdE dt. When λ → +∞, the un- constrained problems (13a) becomes equivalent to the original constrained problem. The major challenge of solving Eq. (13a) lies in the second term. We need to ﬁnd the mathematical relationship between charging cycle depth vi and charging power ct, as well as the relationship between discharging cycle depth wj and discharging power dt. Recall that the rainﬂow cycle counting algorithm introduced in Section III, each time index is mapped to at least one charging half cycle or at least one discharging half cycle. Some time steps sit on the junction of two cycles. Let Tvi be all the time indexes that belong to the charging half cycle i and let the time indexes belonging to the discharge half cycle j be set TWj . Then Tv1 ∪ . . . ∪ Tv|v| ∪ Tw1 ∪ . . . ∪ Tw|w| = {1, . . . , T } , (14) Tvi ∩ Twj = ∅ , ∀i, j . (15) Eq. (15) shows there is no overlapping between a charging and a discharging cycle. That is, each half-cycle is either charging or discharging. The cycle depth therefore equals to the sum of battery charging or discharging within the cycle time frame, vi = ∑ t∈Tvi τ ηc E ct , (16) wj = ∑ t∈T Wj τ ηdE dt. (17) The rainﬂow cycle cost f (x) is not continuously differ- entiable. At each cycle junction point, it has more than one subgradient. We use ∂f (x)|ct to denote a subgradient at ct. Since the SoC proﬁle x is a function of c, by the chain rule, we have ∂f (x)|ct = Φ ′(vi) Bτ ηc 2 , t ∈ Tvi , (18) where vi is the depth of cycle that ct belongs to. Note, at junction points, ct belongs to two cycles so that the subgradient is not unique. We can set vi to any value between vi1 and vi2, where vi1 and vi2 are the depths of two junction cycles ct belongs to. Similarly for discharging cycle, a subgradient at dt is ∂f (x)|dt = Φ ′(wj) Bτ 2ηd , t ∈ T Wj (19) where wj is the depth of the cycle that dt belongs to. At the junction point, wj could be set to any value between wj1 and wj2, which are the two junction cycles dt belongs to. Therefore, we write the subgradient of J(·) with respect to ct and dt as ∂J|ct and ∂J|dt, where ∂J|ct = − ∂R(c, d, r) ∂ct + Φ′ (vi) Bτ ηc 2 − 1 λ { T∑ k=t 1 x(k) − x ( τ ηc E ) + T∑ k=t 1 x(k) − x ( τ ηc E ) + 1 ct − P + 1 ct }, t ∈ Tvi (20) ∂J|dt = − ∂R(c, d, r) ∂dt + Φ′ (wj) Bτ 2ηd − 1 λ {− T∑ k=t 1 x(k)−x ( τ ηdE ) − T∑ k=t 1 x(k)−x ( τ ηdE ) + 1 dt − P + 1 dt }, t ∈ T Wj (21) The update rules for ct and dt at the kth iteration are, c(k)(t) = c(k−1)(t) − αk · ∂J|c(k−1)(t) , d(k)(t) = d(k−1)(t) − αk · ∂J|d(k−1)(t) , where αk is the step length at kth iteration. Since the subgra- dient method is not a decent method [50], it is common to keep track of the best point found so far, i.e., the one with smallest function value. At each step, we set J best (k) = min { J best (k−1), J(c(k), d(k)) } , Since the J(·) is convex, choosing an appropriate step size guarantees convergence. VI. ONLINE POLICY In this section, we describe the proposed online battery control policy which balances the cost of deviating from the instruction signal and the cycle aging cost of batteries while satisfying operation constraints. This policy takes a threshold form and achieves an optimality gap that is independent of the total number of time steps. Therefore in term of regret, this policy achieves the strongest possible result: the regret do not grow with time. Note we assume the regulation capacity has already been ﬁxed in the previous capacity settlement stage. A. Control Policy Formulation The key part of the control policy is to calculate thresholds that bound the SoC of the battery as a function of the deviation penalty and degradation cost. Let ˆu denote this bound on the SoC and it is given by: ˆu = ˙Φ−1( πηd + θ/ηc B ) (22) where ˙Φ−1(·) is the inverse function of the derivative of the cycle stress function Φ(·). Recall that π and θ are the penalty 9 prices of not meeting the instruction signal and B is the price of replacing a cell in the battery. Since Φ is an increasing function, Φ−1 is also an increasing function. If the replacement cost is relatively small compared to the penalties( πηd+θ/ηc B is large), ˆu would also be large, therefore allowing the battery a wider SoC range to operate in. On the other hand, if the replacement cost is large compared to the penalties ( πηd+θ/ηc B is small), ˆu would be small, leading to a narrower range of SoC the battery would operate in. Algorithm 1: Proposed Control Policy Result: Determine battery dispatch point ct, dt // initialization set Φ( πηd+θ/ηc B ) → ˆu, x0 → xmax 0 , x0 → xmin 0 ; while t ≤ T do // read xt and update controller set max{xmax t−1 , xt} → xmax t , min{x min t−1, xt} → xmin t ; set min{x, x min t + ˆu} → xt; set max{x, x max t − ˆu} → xt; // read rt and enforce soc bound if rt ≥ 0 then set min { E τ ηc (xt − xt), rt} → ct, 0 → dt ; else set 0 → ct, min { Eηd τ (xt − xt), rt} → dt ; end // wait until next control interval set t + 1 → t; end The proposed control policy is summarized in Algorithm 1, and Fig. 7 shows a control example of the proposed policy, in which the battery follows the regulation instruction until the distance between its maximum and minimum SoC reaches ˆu. The detailed formulation is as follows. We assume at a particular control step t, xt (battery state of charge) and rt (fre- quency regulation signal) are observed, and the proposed reg- ulation policy has the following form: gt(xt, rt) = [ ct dt] . The control policy employs the following strategy If rt ≥ 0, ct = min { E τ ηc (xt − xt), rt} (23) If rt < 0, dt = min { Eηd τ (xt − xt), rt} (24) where xt and xt are the upper and lower storage energy level bound determined by the controller at the control interval t for enforcing the SoC band ˆu xt = min{x, x min t + ˆu} xt = max{x, x max t − ˆu} (25) and xmax t , xmin t is the current maximum and minimum battery storage level since the beginning of the operation, which are updated at each control step as x max t = max{xmax t−1 , xt} xmin t = min{xmin t−1, xt} . (26) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 [t] -1 -0.5 0 0.5 1P[normalized]instruction response (a) Instruction (dotted line) vs. response (solid line) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 [t] 0 20 40 60 80 100SoC [%] controlled response regulation instruction current max SoC current min SoC SoC bound enforcement triggered (b) Optimal (solid) vs. proﬁle if signal is followed perfectly (dotted) Fig. 7. Illustration of the control policy in Algorithm 1. The policy keeps track the current maximum and minimum SoC level. When the distance in between reaches the calculated threshold ˆu, the policy starts to constrain the response. Deeper charge and discharge cycles are avoided. B. Optimality Gap to Ofﬂine Problem Theorem 2 states that the gap between the online policy in Algorithm 1 and an ofﬂine optimal solution is bounded by a constant. This constant can be explicitly characterized. To do this, we deﬁne three new functions: Ju(u) = EBΦ(u) + E(θ/ηc + πηd)u (27a) Jv(v) = (1/2)EBΦ(v) + (E/ηc)θv (27b) Jw(w) = (1/2)EBΦ(w) + Eηdπw (27c) where Ju is the cost associated with a full cycle (made up of a charging half cycle and a discharging half cycle with equal magnitude), Jv for a charge half cycle, and Jw for a discharge half cycle. The detailed transforming procedure is discussed in the Appendix II-A. If the cycle depth stress function Φ(·) is strictly convex, then it is easy to see that (22) is the unconstrained minimizer to (27a). Similarly, the unconstrained minimizers of (27b) and (27c) are: ˆv = ˙Φ−1( θ/ηc B ), ˆw = ˙Φ−1( πηd B ) . (28) The following theorem offers the analytical expression for ϵ. Theorem 3. If function Φ(·) is strictly convex, then the worst- case optimality gap for the proposed policy g(·) in Theorem 2 is ϵ =    ϵw if πηd > θ/ηc 0 if πηd = θ/ηc ϵv if πηd < θ/ηc (29) where ϵw = Jw(ˆu) + 2Jv(ˆu) − Jw( ˆw) − 2Jv(ˆv) (30) ϵv = 2Jw(ˆu) + Jv(ˆu) − 2Jw( ˆw) − Jv(ˆv) . (31) Note that Corollary 1 follows from Theorem 3 directly. We defer the proof of the latter to Appendix B. The intuition is 10 that battery operations consist mostly of full cycles due to limited storage capacity because the battery has to be charged up before discharged, and vice versa. Enforcing ˆu–the optimal full cycle depth calculated from penalty prices and battery coefﬁcients–ensures optimal responses in all full cycles. In cases that πηd = θ/ηc, ˆu is also the optimal depth for half cycles, and the proposed policy achieves optimal control. In other cases, the optimality gap is caused by half cycles because they have different optimal depths. However, half cycles have limited occurrences in a battery operation because they are incomplete cycles [28], so that the optimality gap is bounded as stated in Theorem 3. Fig. 8 shows some examples of the policy optimality when responding to the regulation instruction (Fig VI-B) under different price settings. The proposed policy has the same control action in all three price settings because of the same ˆu. The policy achieves optimal control in Fig VI-B because ˆu is the optimal depth for all cycles. In Fig VI-B and Fig VI-B, half cycles have different optimal depths and the policy is only near-optimal. However, the ofﬂine result also selectively responses to instructions with a zero penalty price (charge instructions in Fig VI-B, discharge instructions in Fig VI-B), because it returns the battery to a shallower cycle depth with smaller marginal cost. timeregulation signal (a) Regulation instruction signal timeSoC policy offline (b) θ = π > 0 timeSoC policy offline (c) θ = 0, π > 0 timeSoC policy offline (d) θ > 0, π = 0 Fig. 8. Example illustration of the policy optimality under different price settings. The value of θ + π is the same in all cases and the round-trip efﬁciency is assumed to be one, so ˆu is the same in all cases. VII. SIMULATION RESULTS In this section, we present several simulation examples from different aspects. In section VII-A, we compare the performance of Rainﬂow cycle-based model against the bench- mark energy throughput degradation model in ofﬂine battery operation optimization; and veriﬁed its efﬁciency in increasing the BES operational proﬁt and extending battery lifetime. In section VII-B, we validate the optimality of the proposed on- line control policy using massive random generated regulation traces. In Section VI-C, we compare the proposed online BES control policy against two state-of-the methods using realistic regulation signals from PJM Interconnection [51]: a greedy controller [4] and a MPC controller assuming perfect future information is known [23]. TABLE II KEY PROPERTIES OF THE SIMULATED BATTERY Attributes Value Peak power 1MW Capacity 0.25MWh Cell type Lithium-ion Efﬁciency 95% for both charging and discharging Lifetime 3,000 cycles at 80% cycle depth Cell price 300 $/kWh A. Comparison between the Rainﬂow Cycle-based Model and Benchmark Energy Throughput Model To demonstrate the efﬁciency of the rainﬂow cycle-based degradation model in maximizing the BES operation revenue and extending BES lifetime, we compare with the benchmark linear energy throughput model. Linear energy throughput model is one of the most widely adopted degradation model in previous BES optimization literatures [20], [22], [23]. Consider a lithium-ion battery with a polynomial cycle depth stress function concluded from lab tests [15], where Φ(u) = (5.24 × 10−4)u 2.03, e.g., for a cycle with depth u = 0.8, Φ(u) = 3.33 × 10−4. Other key properties of the battery are summarized in Table II. For the linear energy throughput degradation model, we amortize the total battery cost across its lifetime energy throughput. Since the battery could operate for 3, 000 cycles at 80% cycle depth, the lifetime energy throughput is 4.8 × 103M W h. Therefore, the linear cost coefﬁcient λe = 300,000 4.8×103 = 62.5$/M W h. We compare the performance of rainﬂow degradation model and linear energy throughput model in the ofﬂine optimal BES frequency regulation problem. Assume the battery bid for 1 MW symmetric regulation capacity, and the frequency regulation capacity payment is 50$/MWh [5]. The main trade- off for battery in the optimal frequency regulation problem is between the mismatch penalty and cell degradation cost. De- pending on the mismatch penalty price, the optimized battery response might be quite different. We consider the following two cases: 1) when the mismatch penalty θ = π = 100, which are higher than the linearized battery degradation cost λe; and 2) when the mismatch penalty θ = π = 50, which are lower than the battery degradation cost λe. Fig. 9(a) and Fig. 11 TABLE I SIMULATION WITH RANDOM GENERATED REGULATION SIGNALS. θ π η T ˆu Average objective value [$] Theoretical worst-case Maximum optimality gap Case [$/MWh] [$/MWh] [%] [%] Ofﬂine Proposed controller optimality gap ϵ [$] among 100 simulations [$] 1 50 50 100 100 11.1 117.4 117.4 0.00 0.00 2 100 100 100 100 21.9 168.7 168.7 0.00 0.00 3 200 200 100 100 42.8 219.4 219.4 0.00 0.00 4 50 50 85 100 11.2 117.2 117.3 0.06 0.06 5 80 20 85 100 11.7 108.0 110.7 3.83 3.83 6 20 80 85 100 10.6 122.4 123.8 2.19 2.19 7 50 50 85 200 11.2 235.6 235.7 0.06 0.06 8 80 20 85 200 11.7 219.5 222.2 3.83 3.83 9 20 80 85 200 10.6 247.6 248.9 2.19 2.19 Time(min) 20 40 60Signal(MW) -1 -0.5 0 0.5 1 Battery power response reg rainflow linear Time(min) 20 40 60SoC(%) 0.4 0.5 0.6 0.7 0.8 Battery SoC curve rainflow linear (a) θ = π = 100 Time(min) 20 40 60Signal(MW) -1 -0.5 0 0.5 1 Battery power response reg rainflow linear Time(min) 20 40 60SoC(%) 0.4 0.5 0.6 0.7 0.8 Battery SoC curve rainflow linear (b) θ = π = 50 Fig. 9. Comparison of the battery response under Rainﬂow cycle-based model and linear energy throughput model when mismatch penalty θ = π = 100 and θ = π = 50. 9(b) visualize the optimized battery power outputs and SoC evolution curves in a 1 hour optimization horizon under two cases. In Fig. VII-A, when the mismatch penalty π = θ = 100 > λe, the battery completely follows the regulation instruction signal under the linear energy throughput model. However, under the rainﬂow cycle-based model, instead of the “blindly following” strategy, the battery follows the regulation signal most times and stops following the instruction signal to avoid high degradation cost of deep cycles. As we can observe from the bottom plot of Fig. 9(a), the battery SoC is restricted to a moderate range and evolves smoothly under the rainﬂow cycle-based cost while changes wildly under the linear model. When π = θ = 50 < λe, the battery stays idle under the linear model since the linearized battery deployment cost is higher than mismatch penalty, which leads to zero regulation service revenue. By comparison, under the rainﬂow model, the battery responds to the regulation signal strategically within a narrow cycle depth bound, which leads to 14.1$/hour revenue by solving the optimization problem. The above comparison results show that rainﬂow cycle- based model can better capture the battery aging cost, therefore it provides a better BES operation schedule than previous linear energy throughput model. However, the major challenge that obstructs the adoption of rainﬂow cycle-based degradation model in previous BES optimization literatures is the lack of an efﬁcient solver. Here, we compare the computational efﬁciency of our subgradient solver with exact gradient form in Section V-B with the numerical solver used in previous literatures [14], [31]. Table III shows the difference of com- putation time between the two solvers. It turns out that the latter does not converge for problem horizon of longer than 4 hours. All experiments conducted on a Macbook Pro with 2.5 GHz Intel Core i7, 16 GB 1600 MHz DDR3. TABLE III COMPUTATION TIME COMPARISON BETWEEN THE PROPOSED SUBGRADIENT SOLVER WITH ANALYTICAL SUBGRADIENT FORM AND PREVIOUS NUMERICAL SOLVERS [14], [31] Time horizon (min) 60 120 240 720 1440 Subgradient solver time(s) 23.9 62.5 156.3 673.5 2522 Numerical solvers time(s) 264 2006 29800 ∼ ∼ B. Online Controller and Time-invariant Optimality Gap To validate the optimality of proposed battery control policy in Theorem 2 and the time-invariant gap in Theorem 3, we design nine test cases. Each test case has different market prices and battery round-trip efﬁciency η = ηdηc setting. In order to demonstrate the time-invariant property of the optimality gap, Case 7 to 9 are designed to double the duration of Case 4 to 6 with the same prices and efﬁciency setting. Each test case is simulated for 100 times using different randomly generated frequency regulation traces for reliability. At each time step, the signal is draw independently from a normal distribution with mean 0 and variance 1, and truncated between [−1, 1]. Table I summarizes the nine test case results. For each case, the penalty prices, round-trip efﬁciency, and the number of simulation control intervals used in each test case are listed, as well as the cycle depth bound ˆu (calculated using (22)) and the worst-case theoretical optimality gap ϵ. Each time step is 1 minute. The maximum optimality gap incurs in 100 simulations are also recorded. This test validates Theorem 3 since ϵ is exactly the same as the recorded maximum optimality gap of the proposed policy in all cases (both highlighted in pink). In particular, the proposed policy achieves exact control results in Case 1 to 3 because θ/ηc = πηd, while Case 4 to 9 have non- zero gaps because the round-trip efﬁciency is less than ideal 12Objective value ($/h) 0 2 4 6 8 10 Proposed policy aging cost Proposed policy mismatch penalty MPC aging cost MPC mismatch penalty Greedy policy aging cost Greedy policy mismatch penalty 100 $/MWh50 $/MWh30 $/MWh10 $/MWh Fig. 10. Regulation operating cost break-down comparison between the proposed policy, MPC and greedy policy. Although the proposed policy has higher mismatch penalties, the cost of cycle aging is signiﬁcantly smaller, so it achieves better trade-offs between degradation and mismatch penalty. Time (min) 20 40 60Signal (MW) -1 -0.5 0 0.5 1 RegD MPC Proposed Fig. 11. Comparison between the online MPC policy and proposed policy in response to the regulation signal RegD. Both methods have mismatch part (circled in gray) because of the tradeoff of degradation cost and mismatch penalty. MPC response is more aggressive because of under-estimate of the cycle depth. (η < 1). We also see that as penalty prices become higher, the optimal cycle depth ˆu becomes larger and the battery follows the regulation instruction more accurately. Case 7 to 9 have the same parameter settings as to Case 4 to 6, except that the dimension of regulation signal doubled. The proposed policy achieves the same worst-case optimality gap in the two operation duration settings – which again veriﬁes that the worst-case optimality gap of the proposed online control policy is independent of operation time T . C. Comparison with Baseline Online Control Algorithms We take the proposed online battery control algorithm and compare against two state-of-the-art control algorithms for bat- tery frequency regulation: the greedy control algorithm [4] and the model predictive control (MPC) algorithm with rainﬂow degradation model [23]. The greedy control strategy (in which BES follows the frequency regulation signal exactly within its power and energy limit) serves as the current market practice for BES frequency regulation [cite], and authors in [4] showed it is optimal under linear energy throughput model. MPC is one of the most successful and the most popular real-time control methods. The basic idea of MPC is to predict the future instruction signal over a ﬁnite time horizon and compute the optimal control inputs. The obtained control is injected into the system until the next control step. Here, we assume that the future frequency regulation signal can be perfectly predicted within 60 steps (4 minutes). Note, this is a strong assumption that does not hold in practice, since the second-by-second regulation signals are random and are almost impossible to predict [41]. Therefore, the following results indicate the best possible performance of such MPC-based methods. We repeat the simulation using different penalty prices. We let θ = π in each test case and set the charging and discharging efﬁciency to 95%. Fig. 10 summarizes the simulation results in the form of regulation operating cost versus penalty prices, the cycle aging cost and the regulation mismatch penalty are listed for each policy. Because the greedy control [4] naively follow the signal and does not consider market prices, its control actions are the same in all price scenarios. The penalty increases linearly with the penalty price. MPC-based method tries to balance the degradation cost and mismatch penalty within a future look-ahead window. However, since the look-ahead window length is limited (due to real-time computational requirement and signal predictability), it tends to under-estimate the resulted cycle depth and leads to overag- gressive control actions than the ofﬂine optima. Our proposed control policy leads to the lowest operating cost under all the cases by limiting the battery response within the optimal cycle depth. As the penalty price increases, the gap between the three policies becomes smaller since the optimal cycle depth ˆu increases and battery follows the signal more closely. According to the historical billing data of PJM regulation market [52], the regulation mismatch penalty price is usually below 50$/MWh. Under such price setting, we save more than 30% by using the proposed online control policy, and the battery can last as much as 3-4 times longer compared to the greedy and MPC controllers. VIII. CONCLUSION AND FUTURE WORK We consider the optimal control of battery energy storage under a general “pay-for-performance” setup, where batteries need to trade-off between following instruction signals and the impact of degradation from charging and discharging actions. We show that under electrochemically accurate cycle- based degradation models, the battery control problem can be formulated as a convex online optimization problem. Based on this result, we developed an online control policy that has a bounded time-invariant worst-case optimality gap, and is stricly optimal under certain market scenarios. From the case study in PJM regulation market, we veriﬁed the proposed degradation model and online control policy can signiﬁcantly reduce operation cost and extend battery lifetime. There are some natural directions for future work. For example, the proposed threshold controller is the optimal under the pay for performance market settings, where the penalty prices are determined ahead of time. An important future direction is to extend our results to settings where the 13 penalty prices are random in themselves, such as real-time arbitrage [45], [53]. Another interesting direction to explore is online parameter estimation of battery degradation models. Currently, we use a ﬁxed cycle stress function based on battery testing data from manufacturer. The performance of the proposed controller will be further enhanced if we could update the coefﬁcients of the battery degradation model online, leveraging real-time battery condition measurements. REFERENCES [1] D. Rastler, Electricity energy storage technology options: a white paper primer on applications, costs and beneﬁts. Electric Power Research Institute, 2010. [2] B. Dunn, H. Kamath, and J.-M. Tarascon, “Electrical energy storage for the grid: a battery of choices,” Science, vol. 334, no. 6058, pp. 928–935, 2011. [3] X. Hu, C. Zou, C. Zhang, and Y. Li, “Technological developments in batteries: A survey of principal roles, types, and management needs,” IEEE Power and Energy Magazine, vol. 15, no. 5, pp. 20–31, Sept 2017. [4] E. Bitar, R. Rajagopal, P. Khargonekar, and K. Poolla, “The role of co-located storage for wind power producers in conventional electricity markets,” in American Control Conference (ACC), 2011. IEEE, 2011, pp. 3886–3891. [5] Y. Shi, B. Xu, B. Zhang, and D. Wang, “Leveraging energy storage to optimize data center electricity cost in emerging power markets,” in Proceedings of the Seventh International Conference on Future Energy Systems (e-Energy). ACM, 2016, p. 18. [6] N. Li, L. Chen, and S. H. Low, “Optimal demand response based on utility maximization in power networks,” in Power and Energy Society General Meeting, 2011 IEEE. IEEE, 2011, pp. 1–8. [7] H. David and S. Alfred, “Deployment of grid-scale batteries in the united states,” in Prepared for Ofﬁce of Energy Policy and Systems Analysis, U.S. Department of Energy, 2016. [8] Y. Xu and L. Tong, “Optimal operation and economic value of energy storage at consumer locations,” IEEE Transactions on Automatic Con- trol, vol. 62, no. 2, pp. 792–807, 2017. [9] B. Xu, A. Oudalov, A. Ulbig, G. Andersson, and D. Kirschen, “Mod- eling of lithium-ion battery degradation for cell life assessment,” IEEE Transactions on Smart Grid, vol. PP, no. 99, pp. 1–1, 2016. [10] P. Arora, R. E. White, and M. Doyle, “Capacity fade mechanisms and side reactions in lithium-ion batteries,” Journal of the Electrochemical Society, vol. 145, no. 10, pp. 3647–3667, 1998. [11] E. Chemali, L. McCurlie, B. Howey, T. Stiene, M. M. Rahman, M. Preindl, R. Ahmed, and A. Emadi, “Minimizing battery wear in a hybrid energy storage system using a linear quadratic regulator,” in Industrial Electronics Society, IECON 2015-41st Annual Conference of the IEEE. IEEE, 2015, pp. 003 265–003 270. [12] B. Bouchard, R. Elie, and C. Imbert, “Optimal control under stochastic target constraints,” SIAM Journal on Control and Optimization, vol. 48, no. 5, pp. 3501–3531, 2010. [13] P. W. Northrop, V. Ramadesigan, S. De, and V. R. Subramanian, “Coor- dinate transformation, orthogonal collocation, model reformulation and simulation of electrochemical-thermal behavior of lithium-ion battery stacks,” Journal of The Electrochemical Society, vol. 158, no. 12, pp. A1461–A1477, 2011. [14] G. He, Q. Chen, C. Kang, P. Pinson, and Q. Xia, “Optimal bidding strategy of battery storage in power markets considering performance- based regulation and battery cycle life,” IEEE Transactions on Smart Grid, vol. 7, no. 5, pp. 2359–2367, 2016. [15] I. Laresgoiti, S. K¨abitz, M. Ecker, and D. U. Sauer, “Modeling mechan- ical degradation in lithium ion batteries during cycling: Solid electrolyte interphase fracture,” Journal of Power Sources, vol. 300, pp. 112–122, 2015. [16] A. Oudalov, D. Chartouni, and C. Ohler, “Optimizing a battery energy storage system for primary frequency control,” IEEE Transactions on Power Systems, vol. 22, no. 3, pp. 1259–1266, 2007. [17] T. Borsche, A. Ulbig, M. Koller, and G. Andersson, “Power and energy capacity requirements of storages providing frequency control reserves,” in IEEE PES General Meeting, Vancouver, 2013. [18] B. Xu, Y. Shi, D. S. Kirschen, and B. Zhang, “Optimal regulation response of batteries under cycle aging mechanisms,” in 2017 IEEE 56th Annual Conference on Decision and Control (CDC), Dec 2017, pp. 751–756. [19] J. Qin, Y. Chow, J. Yang, and R. Rajagopal, “Online modiﬁed greedy algorithm for storage control under uncertainty,” IEEE Transactions on Power Systems, vol. 31, no. 3, pp. 1729–1743, 2016. [20] A. A. Akhil, G. Huff, A. B. Currier, B. C. Kaun, D. M. Rastler, S. B. Chen, A. L. Cotter, D. T. Bradshaw, and W. D. Gauntlett, DOE/EPRI 2013 electricity storage handbook in collaboration with NRECA. Sandia National Laboratories Albuquerque, NM, 2013. [21] B. Zakeri and S. Syri, “Electrical energy storage systems: A comparative life cycle cost analysis,” Renewable and Sustainable Energy Reviews, vol. 42, pp. 569–596, 2015. [22] M. A. Ortega-Vazquez, “Optimal scheduling of electric vehicle charg- ing and vehicle-to-grid services at household level including battery degradation and price uncertainty,” IET Generation, Transmission & Distribution, vol. 8, no. 6, pp. 1007–1016, 2014. [23] Y. Wang, C. Wan, Z. Zhou, K. Zhang, and A. Botterud, “Improving deployment availability of energy storage with data-driven agc signal models,” IEEE Transactions on Power Systems, 2017. [24] M. Ecker, N. Nieto, S. K¨abitz, J. Schmalstieg, H. Blanke, A. Warnecke, and D. U. Sauer, “Calendar and cycle life study of li (nimnco) o 2- based 18650 lithium-ion batteries,” Journal of Power Sources, vol. 248, pp. 839–851, 2014. [25] V. Ramadesigan, P. W. Northrop, S. De, S. Santhanagopalan, R. D. Braatz, and V. R. Subramanian, “Modeling and simulation of lithium- ion batteries from a systems engineering perspective,” Journal of The Electrochemical Society, vol. 159, no. 3, pp. R31–R45, 2012. [26] “Northern arizona wind & sun inc. battery cycles v.s. lifespan plot.” [Online]. Available: https://www.solar-electric.com/learning-center/batteries-and-charging/ deep-cycle-battery-faq.html#Cycles%20vs%20Life [27] S. D. Downing and D. Socie, “Simple rainﬂow counting algorithms,” International journal of fatigue, vol. 4, no. 1, pp. 31–40, 1982. [28] C. Amzallag, J. Gerey, J. Robert, and J. Bahuaud, “Standardization of the rainﬂow counting method for fatigue analysis,” International journal of fatigue, vol. 16, no. 4, pp. 287–293, 1994. [29] V. Muenzel, J. de Hoog, M. Brazil, A. Vishwanath, and S. Kalya- naraman, “A multi-factor battery cycle life prediction methodology for optimal battery management,” in Proceedings of the 2015 ACM Sixth International Conference on Future Energy Systems. ACM, 2015, pp. 57–66. [30] T. Dragiˇcevi´c, H. Pandˇzi´c, D. ˇSkrlec, I. Kuzle, J. M. Guerrero, and D. S. Kirschen, “Capacity optimization of renewable energy sources and battery storage in an autonomous telecommunication facility,” IEEE Transactions on Sustainable Energy, vol. 5, no. 4, pp. 1367–1378, 2014. [31] K. Abdulla, J. De Hoog, V. Muenzel, F. Suits, K. Steer, A. Wirth, and S. Halgamuge, “Optimal operation of energy storage systems considering forecasts and battery degradation,” IEEE Transactions on Smart Grid, 2016. [32] L. Xie, Y. Gu, A. Eskandari, and M. Ehsani, “Fast mpc-based coordi- nation of wind power and battery energy storage systems,” Journal of Energy Engineering, vol. 138, no. 2, pp. 43–53, 2012. [33] J. Qin, Y. Chow, J. Yang, and R. Rajagopal, “Distributed online modiﬁed greedy algorithm for networked storage operation under uncertainty,” IEEE Transactions on Smart Grid, vol. 7, no. 2, pp. 1106–1118, 2016. [34] J. H. Kim and W. B. Powell, “Optimal energy commitments with storage and intermittent supply,” Operations research, vol. 59, no. 6, pp. 1347– 1360, 2011. [35] Y. Xu and L. Tong, “On the value of storage at consumer locations,” in PES General Meeting— Conference & Exposition, 2014 IEEE. IEEE, 2014, pp. 1–5. [36] P. M. van de Ven, N. Hegde, L. Massouli´e, and T. Salonidis, “Optimal control of end-user energy storage,” IEEE Transactions on Smart Grid, vol. 4, no. 2, pp. 789–797, 2013. [37] J. L. Melo, T. J. Lim, and S. Sun, “Online demand response strategies for non-deferrable loads with renewable energy,” IEEE Transactions on Smart Grid, 2017. [38] V. Pop, H. J. Bergveld, D. Danilov, P. P. Regtien, and P. H. Notten, Battery management systems: Accurate state-of-charge indication for battery-powered applications. Springer Science & Business Media, 2008, vol. 9. [39] X. Wu, X. Hu, Y. Teng, S. Qian, and R. Cheng, “Optimal integration of a hybrid solar-battery power source into smart home nanogrid with plug- in electric vehicle,” Journal of Power Sources, vol. 363, pp. 277–283, 2017. [40] M. R. Almassalkhi and I. A. Hiskens, “Model-predictive cascade mitiga- tion in electric power systems with storage and renewablespart i: Theory and implementation,” IEEE Transactions on Power Systems, vol. 30, no. 1, pp. 67–77, 2015. 14 [41] J. Hughes, A. Dominguez-Garcia, and K. Poolla, “Coordinating het- erogeneous distributed energy resources for provision of frequency regulation services,” in Proceedings of the 50th Hawaii International Conference on System Sciences, 2017. [42] A. Millner, “Modeling lithium ion battery degradation in electric vehi- cles,” in Innovative Technologies for an Efﬁcient and Reliable Electricity Supply (CITRES), 2010 IEEE Conference on. IEEE, 2010, pp. 349–356. [43] B. Xu, Y. Dvorkin, D. S. Kirschen, C. Silva-Monroy, and J.-P. Watson, “A comparison of policies on the participation of storage in us frequency regulation markets,” PES Genreal Meeting, 2016. [44] D. Krishnamurthy, C. Uckun, Z. Zhou, P. Thimmapuram, and A. Bot- terud, “Energy storage arbitrage under day-ahead and real-time price uncertainty,” IEEE Transactions on Power Systems, 2017. [45] J. E. Parsons, C. Colbert, J. Larrieu, T. Martin, and E. Mastrangelo, “Fi- nancial arbitrage and efﬁcient dispatch in wholesale electricity markets,” MIT Center for Energy and Environmental Policy Research, Tech. Rep. CEEPR WP 2015-002, 2015. [46] I. Rychlik, “Extremes, rainﬂow cycles and damage functionals in con- tinuous random processes,” Stochastic processes and their applications, vol. 63, no. 1, pp. 97–116, 1996. [47] G. Marsh, C. Wignall, P. R. Thies, N. Barltrop, A. Incecik, V. Venugopal, and L. Johanning, “Review and application of rainﬂow residue process- ing techniques for accurate fatigue damage estimation,” International Journal of Fatigue, vol. 82, pp. 757–765, 2016. [48] E. Hazan et al., “Introduction to online convex optimization,” Founda- tions and Trends R⃝ in Optimization, vol. 2, no. 3-4, pp. 157–325, 2016. [49] W. B. Powell and S. Meisel, “Tutorial on stochastic optimization in energypart i: Modeling and policies,” IEEE Transactions on Power Systems, vol. 31, no. 2, pp. 1459–1467, 2016. [50] S. Boyd and L. Vandenberghe, Convex optimization. Cambridge university press, 2004. [51] “Pjm historical regulation market data,” available online http://www.pjm. com/markets-and-operations/ancillary-services.aspx. [Online]. Avail- able: http://www.pjm.com/markets-and-operations/ancillary-services. aspx [52] “PJM Regulation Zone Preliminary Billing Data,” Aug 2017. [Online]. Available: http://www.pjm.com/markets-and-operations/ billing-settlements-and-credit/preliminary-billing-reports/pjm-reg-data. aspx [53] D. Krishnamurthy, W. Li, and L. Tesfatsion, “An 8-zone test system based on iso new england data: Development and application,” IEEE Transactions on Power Systems, vol. 31, no. 1, pp. 234–246, 2016. APPENDIX A PROOF OF THEOREM 1 A. Single step change convexity Here we continue proof of Theorem 1 from Section V-A2. Since all SoC proﬁle can be written as the sum of step functions, by induction method, we ﬁrst need to prove that f (x) is convex up to a step function as base case (Lemma 1). Here, we ﬁrst provide a restatement of the theorem and lemma that need to prove. Theorem 1. Suppose the battery cycle aging stress function Φ is convex. Then f (x), which is the mapping from the SoC proﬁle x to the degradation cost: f (x) =   |v|∑ i=1 Φ(vi) 2 + |w|∑ i=1 Φ(wi) 2   , (v, w) = Rainﬂow(x) , is convex in terms of x. That is, for any two SoC time series x, y ∈ RT , f (λx + (1 − λ)y) ≤ λf (x) + (1 − λ)f (y), ∀λ ∈ [0, 1] , Lemma 1. Under the conditions in Theorem 1, the rainﬂow cycle-based cost function f satisﬁes f (λx + (1 − λ)QtUt) ≤ λf (x)+(1−λ)f (QtUt) , ∀ λ ∈ [0, 1] , where x ∈ RT , and QtUt is a step function with a jump happens at time t with amplitude Qt. To show this, we need the following propositions. Proposition 1. Let g(·) be a convex function where g(0) = 0. Let r1, r2 be positive real numbers. Then g(r1 + r2) ≥ g(r1) + g(r2) , (32) Proof. By convexity of g, we have r1 r1 + r2 g(r1 + r2) + r2 r1 + r2 g(0) ≥ g(r1) , and r2 r1 + r2 g(r1 + r2) + r1 r1 + r2 g(0) ≥ g(r2) , Adding the two equations ﬁnish the proof. ■ Proposition 2. Let g(·) be a convex function where g(0) = 0. Let r1, r2 be positive real numbers, and r1 ≥ r2. Then g(r1 − r2) ≤ g(r1) − g(r2) , (33) Proof. By Proposition 1, g(α + β) ≥ g(α) + g(β), ∀α, β > 0 , Let α = r1 − r2 > 0, β = r2 > 0, so that g(r1 − r2 + r2) ≥ g(r1 − r2) + g(r2). ■ Proposition 3. Let g(·) be a convex function where g(0) = 0. Let r1 ≥ r2 > 0 be positive real numbers. Then g( 1 2 r1 − 1 2 r2) ≤ 1 2 g(r1) − 1 2 g(r2). (34) Proof. From Proposition 2, g( 1 2 r1 − 1 2 r2) ≤ g( 1 2 r1) − g( 1 2 r2), ∀r1 ≥ r2 > 0 Therefore, it sufﬁces to show, g( 1 2 r1) − g( 1 2 r2) ≤ 1 2 g(r1) − 1 2 g(r2) , Deﬁne h(z) = g( 1 2 z) − 1 2 g(z), h ′(z) = 1 2 g′( 1 2 z) − 1 2 g(z) = 1 2 [g′( 1 2 z) − g′(z)] < 0 , h(·) is a monotone decreasing function. For r1 ≥ r2 > 0, h(r1) ≤ h(r2) , g( 1 2 r1) − 1 2 g(r1) ≤ g( 1 2 r2) − 1 2 g(r2) , g( 1 2 r1) − g( 1 2 r2) ≤ 1 2 g(r1) − 1 2 g(r2). If g(·) is continous, we can generalize the midpoint property to a more broad λ, g(λr1−(1−λ)r2) ≤ λg(r1)−(1−λ)g(r2), ∀λr1 ≥ (1−λ)r2 > 0 15 ■ Proposition 4. Let g(·) be a convex function where g(0) = 0. Let r1, r2, r3 be positive real numbers, which satisfy that r1 + r2 − r3 ≥ 0, and ri ≤ r1 + r2 − r3, ∀i ∈ [1, 2, 3]. Then g(r1 + r2 − r3) ≥ g(r1) + g(r2) − g(r3) , (35) Proof. From r1 ≤ r1 + r2 − r3 we have r2 ≥ r3. From r2 ≤ r1 + r2 − r3, we have r1 ≥ r3 Let’s further assume r1 ≥ r2, g(r1+r2−r3)−g(r1) = (r2−r3)·g′(θ1), θ1 ∈ [r1, r1+r2−r3] , g(r2) − g(r3) = (r2 − r3) · g′(θ2), θ2 ∈ [r3, r2] , Since g(·) is a convex function, for θ2 ≤ r2 ≤ r1 ≤ θ1, we have g′(θ2) ≤ g′(θ1). Therefore, g(r2) − g(r3) ≤ g(r1 + r2 − r3) − g(r1) , g(r1 + r2 − r3) ≥ g(r1) + g(r2) − g(r3). If r1 < r2, similarly we have g(r1) − g(r3) ≤ g(r1 + r2 − r3) − g(r2) , g(r1 + r2 − r3) ≥ g(r1) + g(r2) − g(r3). ■ Proposition 5. Let g(·) be a convex function where g(0) = 0. Let r1, r2, r3, ..., rn be real numbers, suppose • ∑n i=1 ri = D > 0 • |ri| ≤ D, ∀i ∈ {1, 2, 3, ..., n} Then, g( n∑ i=1 ri) ≥ ∑ {i:ri≥0} g(ri) − ∑ {i:ri<0} g(|ri|). (36) Proof. (1) If all rn’s are positive, it is trivial to show g( ∑n i=1 ri) ≥ ∑ i g(ri) by Proposition 1. (2) If rn contains both positive and negative numbers, we order them in an ascending order and renumber them as, r1 ≤ r2 ≤ ... ≤ 0 ≤ ... ≤ rn , Pick r1 (the most negative number), and ﬁnd some positive ri, ri+1 such that ri+1 ≥ ri ≥ |r1| > 0 , Applying Proposition 4, we have g(ri+1+ri+r1) = g(ri+1+ri−|r1|) ≥ g(ri+1)+g(ri)−g(|r1|) , Note, if we can not ﬁnd such ri, ri+1, eg. rn < |r1|. We could group a bunch of postive ri’s to form two new variables s1 = ∑ i∈N1 ri, s2 = ∑ i∈N2 ri where N1 ∩ N2 = ∅. For sure there exists such s1 ≥ s2 ≥ |r1|, since | n∑ i=1 ri| = | ∑ i:ri≥0 ri + ∑ j:rj <0,j̸=1 rj + r1| = ∑ i:ri≥0 ri − | ∑ j:rj <0,j̸=1 rj| − |r1| = D ∑ i:ri≥0 ri = | ∑ j:rj <0,j̸=1 rj| + |r1| + D ≥ 2|r1| Applying Proposition 4, g(s1 + s2 + r1) = g(s1 + s2 − |r1|) ≥ g(s1) + g(s2) − g(|r1|) ≥ ∑ i∈N1 g(ri) + ∑ j∈N2 g(rj) − g(|r1|), N1 ∩ N2 = ∅ Deﬁne r′ 1 = ri+1 + ri + r1 > 0 and re-order r′ 1, r2, r3, ..., ri−1, ri+2, ..., rn. Or deﬁne r′ 1 = y1+y2+r1 > 0, re-order {ri : i ̸= 1, i /∈ N1 ∪ N2} , r′ 1. Repeat the above steps till all ri ′ are postive and ﬁnish the proof. ■ Proposition 6. Consider a step change added to x, where x′(t) = x(t) + QtUt, t ∈ [0, T ]. Suppose Qt is positive 4, the rainﬂow cycle decomposition results (only considering charging cycles) for x and x′ are, x : v1, v2, ..., vm, ..., vM , x ′ : v1 ′, v2 ′, ..., vn ′, ..., vN ′ , Deﬁne L = max(M, N ), we could re-write the cycles in x and x′ as, x : v1, v2, ..., vM , 0, 0, ... ︸ ︷︷ ︸ L , x′ : v1 ′, v2 ′, ..., vN ′, 0, 0, ... ︸ ︷︷ ︸ L , Deﬁne ∆vi such that, vi ′ = vi + ∆vi , ∀i = 1, 2, ..., L The following relations always holds, ∣ ∣ ∣ ∣ ∣ L∑ i=1 ∆vi ∣ ∣ ∣ ∣ ∣ ≤ Qt , (37) |∆vi| ≤ Qt , (38) Proof. There exists a small enough ∆Q such that only one cycle depth vi will change. |∆vi| ≤ ∆Q , 4The proof for negative Qt is the same, just change Qt to |Qt| 16 −∆Q ≤ ∆vi ≤ ∆Q , Consider Qi as a cumulation of small ∆Q, by the principle of integration, we have − ∫ ∆Qdq ≤ L∑ i=1 ∆vi ≤ ∫ ∆Qdq , Such that, ∣ ∣ ∣ ∣ ∣ L∑ i=1 ∆vi ∣ ∣ ∣ ∣ ∣ ≤ Qt |∆vi| ≤ Qt holds for the worst case where all cycle depth changes happen at one certain cycle. Therefore, it is trivial to show that |∆vi| ≤ Qt hold in all conditions. ■ By propositions 1-6, we get the proof of Lemma 1 below. Proof. Let’s consider x′ = λx + (1 − λ)QtUt. Then the rainﬂow cycle decomposition results for λx and x′ are λx : λv1, λv2, ..., λvM , 0, 0, ... ︸ ︷︷ ︸ L x′ : v1 ′, v2 ′, ..., vN ′, 0, 0, ... ︸ ︷︷ ︸ L Deﬁne ∆vi such that, vi ′ = λvi + (1 − λ)∆vi , ∀i = 1, 2, ..., L f ( λx + (1 − λ)QtUt) = L∑ i=1 Φ( λvi + (1 − λ)∆vi) = L+ ∑ i=1 Φ( λvi + (1 − λ)∆vi) ︸ ︷︷ ︸ ∆vi≥0 + L− ∑ i=1 Φ( λvi − (1 − λ)|∆vi| ) ︸ ︷︷ ︸ ∆vi<0 ≤ L + ∑ i=1[λΦ(vi) + (1 − λ)Φ(∆vi)] + L − ∑ i=1[λΦ(vi) − (1 − λ)Φ(|∆vi|)] ≤λ L∑ i=1 Φ(vi) + (1 − λ) [ L+ ∑ i=1 Φ(∆vi) − L − ∑ i=1 Φ(|∆vi|)] (39) To continue the proof in (39) and derive the ﬁnal relation, we separate the whole variable space to two cases based on equations (37) and (38). (1). Assume ∑L i=1 ∆vi = Qi, |∆vi| ≤ Qi. By Proposi- tion (5), it follows that f (λx + (1 − λ)QtUt) ≤λ L∑ i=1 Φ(vi) + (1 − λ) [ L+ ∑ i=1 Φ(∆vi) − L− ∑ i=1 Φ(|∆vi|) ] ≤λ L∑ i=1 Φ(vi) + (1 − λ)Φ( L∑ i=1 ∆vi) =λ L∑ i=1 Φ(vi) + (1 − λ)Φ(Qt) (2) Assume −Qt ≤ ∑L i=1 ∆vi < Qt, |∆vi| ≤ Qt. Add some “virtual cycles” v′ L+1, v′ L+2, ..., v′ L+K at the end of x′, each v′ L+i is positive and satisﬁes that |v′ L+i| ≤ Qt. So that ∑L+K i=1 ∆vi = Qt, |∆vi| ≤ Qt, ∀i ∈ [1, 2, ..., L + K]. Write 0 at the end of λx to achieve the same cycle number. λx : λv1, λv2, ..., λvM , 0, 0, 0, ..., 0 ︸ ︷︷ ︸ L+K x′ : v1 ′, v2 ′, ..., vN ′, 0, 0, ..., 0, v′ L+1, v′ L+2, ..., v′ L+K ︸ ︷︷ ︸ L+K f (λx + (1 − λ)QtUt) ≤λ L∑ i=1 Φ(vi) + (1 − λ) [ l+ ∑ i=1 Φ(∆vi) − l− ∑ i=1 Φ(|∆vi|) ] <λ L∑ i=1 Φ(vi) + (1 − λ) [ l+ ∑ i=1 Φ(∆vi) + L+K∑ i=L+1 Φ(∆vi) − l− ∑ i=1 Φ(|∆vi|)] ≤λ L∑ i=1 Φ(vi) + (1 − λ)Φ( L+K∑ i=1 ∆vi) =λ L∑ i=1 Φ(vi) + (1 − λ)Φ(Qt) To sum up, f ( λx + (1 − λ)QtUt) ≤ λ L∑ i=1 Φ(vi) + (1 − λ)Φ(Qt) = λf (x) + (1 − λ)f (QtUt) , (40) where λ ∈ [0, 1]. ■ Lemma 1 shows that f (x) is convex up to every step change in x. Next, we will prove the general rainﬂow convexity by induction. B. General rainﬂow cycle life loss convexity We will prove the general rainﬂow convexity by induction. By lemma 1, we already proved the base case convexity. When K = 1, f (λx + (1 − λ)y) ≤ λf (x) + (1 − λ)f (y) , λ ∈ [0, 1] Next we need to show the induction relation. Suppose that, f (x) is convex up to the sum of K step changes (arranged by time index) f (λx+(1−λ)y) ≤ λf (x)+(1−λ)f (y) , λ ∈ [0, 1], x, y ∈ RK Then we prove f (x) is convex up to the sum of K + 1 step changes (see Fig. 12), f (λx+(1−λ)y) ≤ λf (x)+(1−λ)f (y) , λ ∈ [0, 1], x, y ∈ RK+1 The following proposition is needed for the proof. Proposition 7. f ( K∑ t=1 PtUt) ≥ f ( i−1∑ t=1 PtUt + (Pi + Pi+1)Ui + K∑ t=i+2 PtUt) , (41) 17 TimeSoC -1 -0.5 0 0.5 1 TimeSoC -1 -0.5 0 0.5 1 K K+1 x y Fig. 12. Induction step from K to K + 1, where we assume that f is convex if one of the proﬁles (here the bottom proﬁle) has only K non-zero step changes and use it to show convexity of f where one proﬁle has K + 1 non-zero steps. In other words, the cycle stress cost will reduce if combining adjacent unit changes. Proof. The rainﬂow cycle counting algorithm only considers local extreme points. I) If Pi and Pi+1 are the same direction, combining them doesn’t affect the value of local extreme points. Therefore the left side cost equals right side cost. II) If Pi and Pi+1 are in different directions, suppose Pi is negative and Pi+1 positive (otherwise the same). Time t = i makes a local minimum point. • Case a: If |Pi+1| ≤ |Pi|, combining them will raise the value of local minimum point i, thus reducing the depth of cycles which contains i. Therefore, the cost after combining is less than the original cost. • Case b: If |Pi+1| > |Pi|, combining them will lead to the removal of local minimum point i. In one case, if Pi−1 and Pi are the same direction, time t = i − 1 will make a local minimum point taking the place of time t = i. Therefore, the magnitude of the local minimum point decreases, similar to case (a), the total cost after combining is less than the original cost. In the other case, if Pi−1 and Pi are different directions, we lose a full cycle with depth |Pi| after combining. So the cost after combining Pi, Pi+1 is also less than the original. To sum up, the cycle stress cost will reduce if combining adjacent unit changes. ■ Recall the step function decomposition results for x, y and λx + (1 − λ)y, where x = T∑ t=1 PtUt, y = T∑ t=1 QtUt , λx + (1 − λ)y = T∑ t=1 ZtUt , There are three cases when T goes from K to K +1, classiﬁed by the value and symbols of ZK, ZK+1. PK PK+1 QK QK+1 a) PK PK+1 QK QK+1 b) PK PK+1 QK QK+1 c) PK PK+1 QK QK+1 d) x y x y x y y x x Fig. 13. Four cases of PK , PK+1, QK , QK+1 Case 1: ZK and ZK+1 are same direction. If ZK+1 and ZK are same direction, we could move ZK+1 to the previous step without affecting the total cost f (x + (1 − λ)y). Then we prove the K + 1 convexity by applying Proposition 7. f (λx + (1 − λ)y) =f (λx K + (1 − λ)yK + ZK+1UK) =f {λxK + (1 − λ)yK + [λPK+1 + (1 − λ)QK+1]UK} ≤λf (xK + PK+1UK) + (1 − λ)f (yK + QK+1UK) ≤λf (x) + (1 − λ)f (y) (by Lemma 1) (42) where xK and yK denote the ﬁrst K elements of x and y. Case 2: ZK and ZK+1 are different directions, with |ZK| ≥ |ZK+1|. In this case, the last step ZK+1 could be separated out from the previous SoC proﬁle. Therefore, f (λx + (1 − λ)y) =f ( λx + (1 − λ)yK ) + Φ (ZK+1UK+1) ≤λf (xK ) + (1 − λ)f (yK ) + Φ [λPK+1UK+1 + (1 − λ)QK+1UK+1] ≤λ[f (xK ) + Φ(PK+1UK+1)] + (1 − λ)[ f (yK ) + Φ(QK+1UK+1)] ≤λf (x) + (1 − λ)f (y) (43) Case 3: ZK and ZK+1 are different directions, with |ZK| < |ZK+1|. In such condition, ZK+1 is not easily separated out from previous SoC. To derive the induction relation, we analyze in three further sub-cases. • ZK−1 and ZK are the same direction. In this sub-case, we could use the same “trick” in Case 1 to combine step K − 1 and K. Proof is trivial for this case. • ZK−1 and ZK are different directions, while ZK and ZK+1 together form a cycle that is separable from the 18 rest of signal (eg. it is the deepest cycle). We can separate ZK+1 out, and proof will be similar to Case 2. • ZK−1 and ZK are different directions, and ZK, ZK+1 do not form a separate cycle. This condition is the most complicated case, since it’s hard to move ZK+1 to the previous step, or separate it out. Therefore, we need to look into PK, PK+1, QK, QK+1 in order to show the K+1 step convexity. It contains four more situations (Fig. 13), for simplicity we only consider the cost of charging cycles. Showing convexity for each situation ﬁnishes the overall convexity proof. Case a) PK and PK+1 are in different directions, with |PK| < |PK+1|. QK and QK+1 are also in different directions, with |QK| < |QK+1|. In such condition, the extra charging half cycle ∆K+1 could be decomposed into two charging half cycles in x and y respectively. f (λx + (1 − λ)y) =f (λxK + (1 − λ)yK + ZK+1UK+1) =f (λxK + (1 − λ)yK + ZK+1UK) + Φ(∆K+1) ≤λf (x K + PK+1UK) + (1 − λ)f (yK + QK+1UK) + Φ(λ∆P,K+1 + (1 − λ)∆Q,K+1) ≤λ[ f (xK + PK+1UK) + Φ(∆P,K+1)] + (1 − λ)[ f (yK + QK+1UK) + Φ(∆Q,K+1) ] =λf (x) + (1 − λ)f (y) (44) Case c) PK and PK+1 are in the same direction. QK and QK+1 are in different directions, with |QK| < |QK+1|. f (λx + (1 − λ)y) =f (λxK + (1 − λ)yK + ZK+1UK+1) =f (λxK + (1 − λ)yK + ZK+1UK) + Φ(∆K+1) ≤λf (xK +PK+1UK)+(1−λ)f (yK +QK+1UK)+Φ(∆K+1) ≤λf (xK + PK+1UK) + (1 − λ)f (yK + QK+1UK) + Φ[ (1 − λ)∆P,K+1 − λQK+1] ≤λf (xK + PK+1UK) + (1 − λ)f (yK + QK+1UK) + Φ[ (1 − λ)∆Q,K+1] ≤λf (x) + (1 − λ)f (y) (45) All the remaining task now is to prove the induction relation for cases b) and d). Firstly, we note that b) implies d). To show this, for case d), deﬁne ˆx = ∑K+1 t=1 ˆPtUt as a modiﬁed version of x, where ˆPt = Pt for t = 1, ..., K − 1, ˆPK = 0, ˆPK+1 = PK + PK+1. We have f (ˆx) = f (x). We also have that f (λˆx + (1 − λ)y) ≥ f (λx + (1 − λ)y) because of the decreasing signal at K for y. Thus, f (λx + (1 − λ)y) ≤ f (λˆx + (1 − λ)y) i) ≤ λf (ˆx) + (1 − λ)f (y) = λf (x) + (1 − λ)f (y) (46) where i) follows from assuming b) is true and letting ∆Q,K+1 = 0 and reversing the label of P and Q. Therefore we only need to prove case b). Case b) contains two different circumstances in terms of QK and QK+1 contained in y. We need the following proposition for the proof of case b). Proposition 8. Let g be a convex increasing function and given real numbers r1 > r2 > 0. Then g(r1) + g(r2) ≥ g(r1 − δ) + g(r2 + δ) if r2 + δ < r1, where δ is a small positive real number. Proof. Deﬁne h(x) = g(x) − g(x − δ) and x, x − δ ≥ 0. We have, h ′(x) = g′(x) − g′(x − δ) ≥ 0 , because g is convex and x > x − δ. Therefore, h(·) is an increasing function, ∀a > b + δ, h(r1) ≥ h(r2 + δ) g(r1) − g(r1 − δ) ≥ g(r2 + δ) − g(r2) Moving g(r2) to the left side and g(r1 − δ) to the right side of the inequality ﬁnishes the proof. ■ To not use too many negative signs, we denote ¯Pt = −Pt, ¯Qt = −Qt. 1⃝ QK, QK+1 do not form a cycle that is separate from the rest of y. f (λx + (1 − λ)y) =f (λx K + (1 − λ)yK + ZK+1UK) + Φ(∆K+1) =f (λx K + (1 − λ)yK + λPK+1UK + (1 − λ)QK+1UK) + f (λ ¯PKUK+1 + (1 − λ) ¯QKUK+1) =f (λxK + λ ¯PKUK − λ ¯PKUK + (1 − λ)yK + λPK+1UK + (1 − λ)QK+1UK) + f (λPK+1UK+1 − λPK+1UK+1 + λ ¯PKUK+1 + (1 − λ) ¯QKUK+1) =f (λxK + λ ¯PKUK + (1 − λ) (yK + QK+1UK + λ 1 − λ (PK+1UK − ¯PKUK) )) + f (λPK+1UK+1 + (1 − λ)( ¯QKUK+1 + λ 1 − λ ( ¯PKUK+1 − PK+1UK+1) )) ≤λf (xK + ¯PKUK) + λf (PK+1UK+1) + (1 − λ)f (yK + (QK+1 − λ 1 − λ ( ¯PK − PK+1))UK) + (1 − λ)f (( ¯QK + λ 1 − λ ( ¯PK − PK+1) )UK+1) Only considering charging cycles, the ﬁrst line is the cost of λf (x). Now we show, f (yK + (QK+1 − λ 1 − λ ( ¯PK − PK+1) )UK) +f (( ¯QK + λ 1 − λ ( ¯PK − PK+1) )UK+1) ≤ f (y) , 19 We can write out the cost of charging cycles in y as f (y), f (y) = N −1∑ i Φ(vi) + Φ( ¯QK) , where vN −1 is the charging cycle that the K + 1 step of y, denoted as y(K + 1) belongs to. By assumption that QK and QK+1 do not form a separate cycle, so that vN −1 ≥ QK+1. By assumption, λ 1−λ ( ¯PK − PK+1) > 0. Let δ = λ 1−λ ( ¯PK − PK+1), and since PK+1 + QK+1 ≥ ¯PK + ¯QK in case b), ¯QK + δ ≤ QK+1 ≤ vN −1. Therefore applying Propo- sition 8, a = vN −1 and b = ¯QK, δ = λ 1−λ ( ¯PK − PK+1), we have the desired result. 2⃝ The other case is that QK, QK+1 form a cycle that is separate from the rest of y. Similar as case 1⃝, we need to show f (yK + (QK+1 − λ 1 − λ ( ¯PK − PK+1))UK) +f (( ¯QK + λ 1 − λ ( ¯PK − PK+1))UK+1) ≤ f (y) Since QK+1 = ¯QK + δQ,K+1, we re-write the above inequality as, f (yK + ( ¯QK + δQ,K+1 − λ 1 − λ ( ¯PK − PK+1))UK) +f ((QK+1 −δQ,K+1 + λ 1−λ ( ¯PK −PK+1) )UK+1) ≤ f(y) Denote δ = δQ,K+1 − λ 1−λ ( ¯PK − PK+1) > 0 f (y) = N −2∑ i Φ(vi) + Φ(vN −1) + Φ(QK+1) , vN −1 is the deepest charging cycle where its ending SoC equals to QK’s starting SoC, and vN −1 ≤ QK+1 since QK+1 forms a separate cycle. Applying Proposition 8 by setting a = QK+1, b = vN −1, we have the desired result. APPENDIX B PROOF OF THEOREM 3 Theorem 2 ( Online optimality). Suppose the battery cycle aging stress function Φ is strictly convex. The proposed online control policy g in Algorithm 1 Section VI. A, has a constant worst-case optimality gap that is independent of the operation time duration T . sup r (Jg − J ∗) ≤ ϵ, ∀ x0 and ∀ {rt}, t ∈ {1, . . . , T }. Corollary 1 (Zero-optimality Gap). If πηd = θ/ηc, then there is no gap between the proposed online algorithm and the optimal value of solving the ofﬂine problem (given entire r ∈ RT ). Theorem 3. If function Φ(·) is strictly convex, then the worst- case optimality gap for the proposed policy g(·) in Theorem 2 is ϵ =    ϵw if πηd > θ/ηc 0 if πηd = θ/ηc ϵv if πηd < θ/ηc (47) where ϵw = Jw(ˆu) + 2Jv(ˆu) − Jw( ˆw) − 2Jv(ˆv) (48) ϵv = 2Jw(ˆu) + Jv(ˆu) − 2Jw( ˆw) − Jv(ˆv) . (49) A. Model Reformulation Both Theorem 2 and Corollary 1 follow directly from Theorem 3. To prove Theorem 3, we rewrite the optimization problem (8) in Section III.E as, (c∗, d ∗) ∈ arg min c,d f (c, d) − τ T∑ t=1 [ θct + πdt] (50a) subject to (8b), (8c), and 0 ≤ ct ≤ [rt] + (50b) 0 ≤ dt ≤ [−rt] + (50c) by observing that a battery’s actions would never exceed the regulation signals. f (c, d) deﬁnes the rainﬂow cycle-based degradation cost. We utilize the rainﬂow algorithm to transform the problem into a cycle-based form. The rainﬂow method maps the entire operation uniquely to cycles, the sum of all charge and discharge power can be represented as the sum of cycle depths as (recall that a full cycle has symmetric depth for charge and discharge) |u|∑ i=1 ui + |v|∑ i=1 vi = τ ηc E T∑ t=1 ct (51) |u|∑ i=1 uj + |w|∑ i=1 wi = τ ηdE T∑ t=1 dt . (52) We substitute (51) and (52) into the reformulated objective function (50a) to replace ct and dt with cycle depths Jcyc(c, d) + Jreg(c, d, r) = |u|∑ i=1 Ju(ui) + |v|∑ i=1 Jv(vi) + |w|∑ i=1 Jw(wi) . (53) B. Proof of Theorem 3 The following lemmas support the proof of Theorem 3. Lemma 2. Suppose an minimizer (c∗, d ∗) of (8) in the ofﬂine setting has the corresponding cycle depths (u ∗, v∗, w∗). Then the depth of each cycle in this result either reaches the optimal cycle depth or bounded by the operation constraints as u ∗ i = min(ˆu, ui) (54a) v∗ i = min(ˆv, vi) (54b) w∗ i = min( ˆw, wi) (54c) where ui, vi, wi denote constraint bounds including the regulation instruction signal and battery energy limit. Lemma 3. A cycle depth in the control action of g(·) either reaches the depth of ˆu or is bounded by the operation constraints. 20 Lemma 4. There exists one and only one half cycle with the largest depth in a rainﬂow residue proﬁle. Other half cycles are in strictly decreasing order either to the left- or to the right-hand side direction of this largest half cycle. timestress s1 s2 s3 s4 s5 s6 7 s8 Fig. 14. Illustration for Lemma 4. The largest half cycle is between s4 and s5, other half cycles are in strictly decreasing order either to the left- or to the right-hand side direction of this largest half cycle. It is easy to see now from Lemma 2 and Lemma 3 that the proposed control policy achieves optimal control result for all full cycles, and the optimality gap is caused by half cycle results. Consider the following relationship in a rainﬂow residue proﬁle as in Lemma 4 assuming the largest half cycle is in the discharging direction . . . < w∗ j−1 < v∗ j−1 < w∗ j > v∗ j > w∗ j+1 > . . . (55) and substitute Lemma 3 into (55) . . . min{ˆv, vj} < min{ ˆw, wj} > min{ˆv, vj+1} . . . (56) It is easy to see now that if ˆw > ˆv, then the largest possible value for w∗ j is ˆw, and the largest possible value for v∗ j and v∗ j−1 is ˆv, the rest half cycles in (55) must have depths smaller than ˆv, which indicates that their depths are bounded by operation. If ˆv > ˆw, then the largest possible value for w∗ j is ˆw, and the rest half cycles must have depths smaller than ˆw. We repeat this analysis for cases that v∗ j is the largest cycle, and summarize the half cycle conditions in Table IV Hence, the worst-case optimality gap is caused by that some TABLE IV SUMMARIZING HALF CYCLE DEPTH CONDITIONS ˆw > ˆv ˆw < ˆv Half cycles of depth ˆw At most one At most two Half cycles of depth ˆv At most two At most one Rest half cycles must be < ˆv must be < ˆw half cycles have depth ˆu or ˆw, while the control policy enforces ˆu as the depth of all cycles unbounded by operation. The gap in Theorem 3 is therefore calculated using half cycle depth conditions in Table IV. Proof of Lemma 2: Since cycles are linear combinations of charge and discharge power, and constraints (50b), (50c), (8c) can be transformed into linear constrains with respect to cycle depths. From Theorem 1, the transformed cycle-based problem is also has a convex objective function with linear constraints. Although exact formulations of the transformed constraints are complicated to express, we use ui, vi, and wi to denote these binds, which are sufﬁcient for the proof of Theorem 3. Proof of Lemma 3: The rainﬂow method always identify the t1 t2 t3 t4 s s+u s1 s2 s3 s4 Fig. 15. Illustration for Lemma 3. largest cycle as between the minimum and the maximum SoC point. In the proposed policy, any operation that goes outside the deﬁned operation zone will cause the largest cycle depth to change instead of the depth of the cycle it was previous in. For example, in Fig. 15 the maximum cycle is between SoC s and s + u, and the battery is at time t4. If the battery continue to charge and the SoC goes about s + u, then this operation will increase the largest cycle depth instead of the shallower cycles assoicated with extrema s2, s3 and s4. Proof of Lemma 4: Because the rainﬂow method identiﬁes a cycle from extrema distances if ∆si−1 ≥ ∆si ≤ ∆si+1, then all extrema in the rainﬂow residue must satisfy either ∆si−1 < ∆si < si+1 or ∆si−1 < ∆si > si+1 or ∆si−1 > ∆si > si+1, which proofs this lemma.","libVersion":"0.3.2","langs":""}